{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card-header\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"span\", null, \"启用\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", null, \"封禁\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_breadcrumb_item = _resolveComponent(\"el-breadcrumb-item\");\n  const _component_el_breadcrumb = _resolveComponent(\"el-breadcrumb\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_switch = _resolveComponent(\"el-switch\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" 面包屑导航区域 \"), _createVNode(_component_el_breadcrumb, {\n    separator: \">\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_breadcrumb_item, {\n      to: {\n        path: '/home'\n      }\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"首页\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_breadcrumb_item, null, {\n      default: _withCtx(() => [_createTextVNode(\"用户管理\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_breadcrumb_item, null, {\n      default: _withCtx(() => [_createTextVNode(\"用户列表\")]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 卡片视图区域 \"), _createVNode(_component_el_card, {\n    class: \"box-card\"\n  }, {\n    header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_el_row, {\n      gutter: 25\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_col, {\n        span: 9\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          placeholder: \"请输入内容\",\n          clearable: \"\"\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_col, {\n        span: 3\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"查询\")]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })])]),\n\n    default: _withCtx(() => [_createVNode(_component_el_table, {\n      data: $setup.usersData,\n      border: \"\",\n      style: {\n        \"width\": \"100%\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        type: \"index\",\n        label: \"id\",\n        width: \"70\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"username\",\n        label: \"姓名\",\n        width: \"200\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"role_name\",\n        label: \"题目\",\n        width: \"350\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"address\",\n        label: \"关注\",\n        width: \"350\"\n      }), _createVNode(_component_el_table_column, {\n        label: \"状态\",\n        prop: \"mg_state\",\n        width: \"350\"\n      }, {\n        default: _withCtx(scope => [_hoisted_2, _createVNode(_component_el_switch, {\n          modelValue: scope.row.mg_state,\n          \"onUpdate:modelValue\": $event => scope.row.mg_state = $event,\n          onChange: $event => $setup.userStateChanged(scope.row)\n        }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"onChange\"]), _hoisted_3]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_table_column, {\n        prop: \"role\",\n        label: \"操作\",\n        width: \"360\"\n      }, {\n        default: _withCtx(() => [_createCommentVNode(\" <template #default=\\\"scope\\\">\\r\\n                        <el-button @click=\\\"authorityChange(scope.row)\\\" link type=\\\"primary\\\" size=\\\"small\\\">\\r\\n                            修改权限\\r\\n                        </el-button>\\r\\n                    </template> \")]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\"])]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"mappings":";;EAaqBA,KAAK,EAAC;AAAa;gCAsBhBC,oBAAe,cAAT,IAAE;gCAERA,oBAAe,cAAT,IAAE;;;;;;;;;;;;;uBApC5BC,oBAoDM,cAnDFC,gCAAgB,EAChBC,aAIgBC;IAJDC,SAAS,EAAC;EAAG;sBACxB,MAAmE,CAAnEF,aAAmEG;MAA9CC,EAAE,EAAE;QAAAC;MAAA;IAAiB;wBAAE,MAAE,kBAAF,IAAE;;QAC9CL,aAA6CG;wBAAzB,MAAI,kBAAJ,MAAI;;QACxBH,aAA6CG;wBAAzB,MAAI,kBAAJ,MAAI;;;;;MAG5BJ,+BAAe,EACfC,aAuCUM;IAvCDV,KAAK,EAAC;EAAU;IAEVW,MAAM,WACb,MAUM,CAVNV,oBAUM,OAVNW,UAUM,GATFR,aAQSS;MARAC,MAAM,EAAE;IAAE;wBACf,MAGS,CAHTV,aAGSW;QAHAC,IAAI,EAAE;MAAC;0BACZ,MACW,CADXZ,aACWa;UADDC,WAAW,EAAC,OAAO;UAACC,SAAS,EAAT;;;UAGlCf,aAESW;QAFAC,IAAI,EAAE;MAAC;0BACZ,MAAwC,CAAxCZ,aAAwCgB;UAA7BC,IAAI,EAAC;QAAS;4BAAC,MAAE,kBAAF,IAAE;;;;;;;;;;sBAO5C,MAqBW,CArBXjB,aAqBWkB;MArBAC,IAAI,EAAEC,gBAAS;MAAEC,MAAM,EAAN,EAAM;MAACC,KAAmB,EAAnB;QAAA;MAAA;;wBAC/B,MAAsD,CAAtDtB,aAAsDuB;QAArCN,IAAI,EAAC,OAAO;QAACO,KAAK,EAAC,IAAI;QAACC,KAAK,EAAC;UAC/CzB,aAA0DuB;QAAzCG,IAAI,EAAC,UAAU;QAACF,KAAK,EAAC,IAAI;QAACC,KAAK,EAAC;UAClDzB,aAA2DuB;QAA1CG,IAAI,EAAC,WAAW;QAACF,KAAK,EAAC,IAAI;QAACC,KAAK,EAAC;UACnDzB,aAAyDuB;QAAxCG,IAAI,EAAC,SAAS;QAACF,KAAK,EAAC,IAAI;QAACC,KAAK,EAAC;UACjDzB,aAOkBuB;QAPDC,KAAK,EAAC,IAAI;QAACE,IAAI,EAAC,UAAU;QAACD,KAAK,EAAC;;0BAE5BE,KAAK,KACnBC,UAAe,EACf5B,aAAgF6B;sBAA5DF,KAAK,CAACG,GAAG,CAACC,QAAQ;2CAAlBJ,KAAK,CAACG,GAAG,CAACC,QAAQ;UAAGC,QAAM,YAAEZ,uBAAgB,CAACO,KAAK,CAACG,GAAG;oFAC3EG,UAAe;;UAIvBjC,aAMkBuB;QANDG,IAAI,EAAC,MAAM;QAACF,KAAK,EAAC,IAAI;QAACC,KAAK,EAAC;;0BAC1C,MAIe,CAJf1B,uRAIe","names":["class","_createElementVNode","_createElementBlock","_createCommentVNode","_createVNode","_component_el_breadcrumb","separator","_component_el_breadcrumb_item","to","path","_component_el_card","header","_hoisted_1","_component_el_row","gutter","_component_el_col","span","_component_el_input","placeholder","clearable","_component_el_button","type","_component_el_table","data","$setup","border","style","_component_el_table_column","label","width","prop","scope","_hoisted_2","_component_el_switch","row","mg_state","onChange","_hoisted_3"],"sourceRoot":"","sources":["D:\\前端基础\\22科技月评-算法在线刷题平台\\algorithmic_platform\\src\\components\\userList\\index.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <!-- 面包屑导航区域 -->\r\n        <el-breadcrumb separator=\">\">\r\n            <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n            <el-breadcrumb-item>用户管理</el-breadcrumb-item>\r\n            <el-breadcrumb-item>用户列表</el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n\r\n        <!-- 卡片视图区域 -->\r\n        <el-card class=\"box-card\">\r\n            <!-- 搜索区域 -->\r\n            <template #header>\r\n                <div class=\"card-header\">\r\n                    <el-row :gutter=\"25\">\r\n                        <el-col :span=\"9\">\r\n                            <el-input placeholder=\"请输入内容\" clearable>\r\n                            </el-input>\r\n                        </el-col>\r\n                        <el-col :span=\"3\">\r\n                            <el-button type=\"primary\">查询</el-button>\r\n                        </el-col>\r\n                    </el-row>\r\n                </div>\r\n            </template>\r\n\r\n            <!-- 用户列表区域 -->\r\n            <el-table :data=\"usersData\" border style=\"width: 100%\">\r\n                <el-table-column type=\"index\" label=\"id\" width=\"70\" />\r\n                <el-table-column prop=\"username\" label=\"姓名\" width=\"200\" />\r\n                <el-table-column prop=\"role_name\" label=\"题目\" width=\"350\" />\r\n                <el-table-column prop=\"address\" label=\"关注\" width=\"350\" />\r\n                <el-table-column label=\"状态\" prop=\"mg_state\" width=\"350\">\r\n                    <!-- 用插槽包裹el-switch开关 -->\r\n                    <template v-slot=\"scope\">\r\n                        <span>启用</span>\r\n                        <el-switch v-model=\"scope.row.mg_state\" @change=\"userStateChanged(scope.row)\" />\r\n                        <span>封禁</span>\r\n                    </template>\r\n                </el-table-column>\r\n\r\n                <el-table-column prop=\"role\" label=\"操作\" width=\"360\">\r\n                    <!-- <template #default=\"scope\">\r\n                        <el-button @click=\"authorityChange(scope.row)\" link type=\"primary\" size=\"small\">\r\n                            修改权限\r\n                        </el-button>\r\n                    </template> -->\r\n                </el-table-column>\r\n            </el-table>\r\n        </el-card>\r\n\r\n\r\n\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, reactive, ref } from 'vue';\r\nimport { getUserList, changeUserState } from '@/axios/apis'\r\n\r\nimport { ElMessage } from 'element-plus'\r\nconst queryInfo = reactive({\r\n    query: \"\",\r\n    pagenum: 1,\r\n    pagesize: 10,\r\n})\r\n\r\nconst usersData = ref([])\r\nconst total = ref(0)\r\n\r\nonMounted(async () => {\r\n    const res = await getUserList(queryInfo)\r\n\r\n    if (res.meta.status !== 200) {\r\n        return ElMessage.error('获取用户列表失败')\r\n    }\r\n    // console.log(res);\r\n    usersData.value = res.data.users\r\n})\r\n\r\n// 监听 switch 开头状态的改变\r\nconst userStateChanged = async (userInfo) => {\r\n    const res = await changeUserState(userInfo)\r\n    console.log(res);\r\n    if (res.meta.status !== 200) {\r\n        userInfo.mg_state = !userInfo.mg_state\r\n        return ElMessage.error('更新用户状态失败')\r\n    }\r\n    ElMessage({\r\n        message: '更新用户状态成功',\r\n        type: 'success',\r\n    })\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}