{"ast":null,"code":"import { reactive, ref, onMounted } from 'vue';\nimport { getOrderList } from '@/axios/apis.js';\nexport default {\n  __name: 'index',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const queryInfo = reactive({\n      query: \"\",\n      pagenum: 1,\n      pagesize: 10\n    });\n    const orderList = reactive([]);\n    const total = ref(0);\n    onMounted(() => {\n      getOrderListView();\n    });\n    const getOrderListView = async () => {\n      const res = await getOrderList(queryInfo);\n      // console.log(res);\n      orderList = res.data.goods;\n      total.value = res.data.total;\n    };\n    const __returned__ = {\n      queryInfo,\n      orderList,\n      total,\n      getOrderListView,\n      reactive,\n      ref,\n      onMounted,\n      get getOrderList() {\n        return getOrderList;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AA6CA,SAASA,QAAQ,EAAEC,GAAG,EAAEC,SAAS,QAAQ,KAAK;AAC9C,SAASC,YAAY,QAAQ,iBAAiB;;;;;;;IAE9C,MAAMC,SAAS,GAAGJ,QAAQ,CAAC;MACvBK,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE;IACd,CAAC,CAAC;IAEF,MAAMC,SAAS,GAAGR,QAAQ,CAAC,EAAE,CAAC;IAC9B,MAAMS,KAAK,GAAGR,GAAG,CAAC,CAAC,CAAC;IACpBC,SAAS,CAAC,MAAM;MACZQ,gBAAgB,EAAE;IACtB,CAAC,CAAC;IAEF,MAAMA,gBAAgB,GAAG,YAAY;MACjC,MAAMC,GAAG,GAAG,MAAMR,YAAY,CAACC,SAAS,CAAC;MACzC;MACAI,SAAS,GAAGG,GAAG,CAACC,IAAI,CAACC,KAAK;MAC1BJ,KAAK,CAACK,KAAK,GAAGH,GAAG,CAACC,IAAI,CAACH,KAAK;IAChC,CAAC","names":["reactive","ref","onMounted","getOrderList","queryInfo","query","pagenum","pagesize","orderList","total","getOrderListView","res","data","goods","value"],"sources":["D:/前端基础/22科技月评-算法在线刷题平台/algorithmic_platform/src/components/Topic/index.vue"],"sourcesContent":["<template>\r\n    <!-- 商品列表代替 -->\r\n    <div>\r\n        <!-- 面包屑导航区域 -->\r\n        <el-breadcrumb separator=\">\">\r\n            <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n            <el-breadcrumb-item>题目管理</el-breadcrumb-item>\r\n            <el-breadcrumb-item>题目列表</el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n\r\n        <el-card>\r\n            <el-row>\r\n                <el-form :inline=\"true\" :model=\"orderList\" class=\"demo-form-inline\">\r\n                    <el-form-item label=\"订单编号\">\r\n                        <el-input v-model=\"orderList.order_number\" placeholder=\"请输入关键字\" />\r\n                    </el-form-item>\r\n                    <el-form-item label=\"订单价格\">\r\n                        <el-input v-model=\"orderList.order_price\" placeholder=\"请输入关键字\" />\r\n                    </el-form-item>\r\n                    <el-form-item>\r\n                        <el-button type=\"primary\">查询</el-button>\r\n                    </el-form-item>\r\n                </el-form>\r\n                <el-table :data=\"orderList\" stripe border style=\"width: 100%\">\r\n                    <el-table-column prop=\"id\" label=\"ID\" />\r\n                    <el-table-column prop=\"order_number\" label=\"标题\" />\r\n                    <el-table-column prop=\"order_price\" label=\"订单价格\" />\r\n                    <el-table-column label=\"是否发货\" prop=\"is_send\">\r\n                        <template v-slot=\"scope\">\r\n                            <template>\r\n                                {{ scope.row.is_send }}\r\n                            </template>\r\n                        </template>\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"下单时间\" label=\"create_time\" />\r\n                    <el-table-column label=\"操作\" />\r\n                </el-table>\r\n                <!-- <el-pagination @current-change=\"currentChange\" background layout=\"prev, pager, next\"\r\n                    :total=\"topicData.count\" /> -->\r\n            </el-row>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref, onMounted } from 'vue'\r\nimport { getOrderList } from '@/axios/apis.js'\r\n\r\nconst queryInfo = reactive({\r\n    query: \"\",\r\n    pagenum: 1,\r\n    pagesize: 10,\r\n})\r\n\r\nconst orderList = reactive([])\r\nconst total = ref(0)\r\nonMounted(() => {\r\n    getOrderListView()\r\n})\r\n\r\nconst getOrderListView = async () => {\r\n    const res = await getOrderList(queryInfo)\r\n    // console.log(res);\r\n    orderList = res.data.goods\r\n    total.value = res.data.total\r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}