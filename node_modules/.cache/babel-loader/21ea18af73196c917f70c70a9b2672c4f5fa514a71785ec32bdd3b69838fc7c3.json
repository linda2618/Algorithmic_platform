{"ast":null,"code":"import { onMounted, ref, reactive } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { getQuestionListById, changeQuestionState } from '@/axios/apis.js';\nimport { ElMessage } from \"element-plus\";\nimport { Plus } from '@element-plus/icons-vue';\nexport default {\n  __name: 'Update',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const route = useRoute();\n\n    //接收跳转携带过来的参数Id\n    let _id = route.query._id;\n    const beforeAvatarUpload = rawFile => {\n      if (rawFile.type !== 'image/jpeg') {\n        ElMessage.error('图片必须是JPG格式!');\n        return false;\n      } else if (rawFile.size / 1024 / 1024 > 2) {\n        ElMessage.error('图片大小不能超过2MB!');\n        return false;\n      }\n      return true;\n    };\n    const QuestionDetail = ref({});\n    const QuestionDetailRef = ref();\n    const src = 'https://cube.elemecdn.com/6/94/4d3ea53c084bad6931a56d5158a48jpeg.jpeg';\n    const QuestionDetailRules = reactive({\n      title: [{\n        required: true,\n        message: \"请输入题目\",\n        trigger: \"blur\"\n      }],\n      description: [{\n        required: true,\n        message: \"请输入描述\",\n        trigger: \"blur\"\n      }],\n      degree: [{\n        required: true,\n        message: \"请输入难度\",\n        trigger: \"blur\"\n      }]\n    });\n    const labelPosition = ref('left');\n    const size = ref('large');\n    onMounted(() => {\n      getQuestionListByIdView();\n    });\n    const getQuestionListByIdView = async () => {\n      const res = await getQuestionListById(_id);\n      // console.log(res);\n      if (res.status !== 200) {\n        return ElMessage.error(\"获取此题目数据失败\");\n      }\n      QuestionDetail.value = res.data;\n    };\n\n    //取消按钮\n    const resetForm = () => {\n      // QuestionDetailRef.value.resetFields()\n      getQuestionListByIdView();\n    };\n\n    //确定按钮\n    const editInfo = async () => {\n      // console.log(QuestionDetail.value);\n      const res = await changeQuestionState(QuestionDetail.value);\n      console.log(res);\n    };\n\n    ///////////////////////////////\n    // var checkPrice = (rule, value, cb) => {\n    //     //验证价格的正则表达式\n    //     let regPrice = /^[1-9]\\d*|0$/\n    //     if (regPrice.test(value)) {\n    //         cb();\n    //     } else {\n    //         cb(new Error(\"价格是不小于0的整数\"));\n    //     }\n    // }\n\n    // var checkNumber = (rule, value, cb) => {\n    //     //验证价格的正则表达式\n    //     let regNumber = /^[1-9]\\d*|0$/\n    //     if (regNumber.test(value)) {\n    //         cb();\n    //     } else {\n    //         cb(new Error(\"数量是不小于0的整数\"));\n    //     }\n    // }\n    // var checkWeight = (rule, value, cb) => {\n    //     //验证价格的正则表达式\n    //     let regWeight = /^[1-9]\\d*|0$/\n    //     if (regWeight.test(value)) {\n    //         cb();\n    //     } else {\n    //         cb(new Error(\"重量是不小于0的整数\"));\n    //     }\n    // }\n    // const QuestionDetailRules = reactive({\n    //     goods_price: [\n    //         { required: true, message: \"请输入价格\", trigger: \"blur\" },\n    //         { validator: checkPrice, trigger: \"blur\" },\n    //     ],\n    //     goods_number: [\n    //         { required: true, message: \"请输入数量\", trigger: \"blur\" },\n    //         { validator: checkNumber, trigger: \"blur\" },\n\n    //     ],\n    //     goods_weight: [\n    //         { required: true, message: \"请输入重量\", trigger: \"blur\" },\n    //         { validator: checkWeight, trigger: \"blur\" },\n    //     ],\n    // });\n\n    const __returned__ = {\n      route,\n      get _id() {\n        return _id;\n      },\n      set _id(v) {\n        _id = v;\n      },\n      beforeAvatarUpload,\n      QuestionDetail,\n      QuestionDetailRef,\n      src,\n      QuestionDetailRules,\n      labelPosition,\n      size,\n      getQuestionListByIdView,\n      resetForm,\n      editInfo,\n      onMounted,\n      ref,\n      reactive,\n      get useRoute() {\n        return useRoute;\n      },\n      get getQuestionListById() {\n        return getQuestionListById;\n      },\n      get changeQuestionState() {\n        return changeQuestionState;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get Plus() {\n        return Plus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AA6CA,SAASA,SAAS,EAAEC,GAAG,EAAEC,QAAQ,QAAQ,KAAK;AAC9C,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,mBAAmB,EAAEC,mBAAmB,QAAQ,iBAAiB;AAC1E,SAASC,SAAS,QAAQ,cAAc;AAExC,SAASC,IAAI,QAAQ,yBAAyB;;;;;;;IAE9C,MAAMC,KAAK,GAAGL,QAAQ,EAAE;;IAExB;IACA,IAAIM,GAAG,GAAGD,KAAK,CAACE,KAAK,CAACD,GAAG;IACzB,MAAME,kBAAkB,GAAIC,OAAO,IAAK;MACpC,IAAIA,OAAO,CAACC,IAAI,KAAK,YAAY,EAAE;QAC/BP,SAAS,CAACQ,KAAK,CAAC,aAAa,CAAC;QAC9B,OAAO,KAAK;MAChB,CAAC,MAAM,IAAIF,OAAO,CAACG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,CAAC,EAAE;QACvCT,SAAS,CAACQ,KAAK,CAAC,cAAc,CAAC;QAC/B,OAAO,KAAK;MAChB;MACA,OAAO,IAAI;IACf,CAAC;IAED,MAAME,cAAc,GAAGf,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9B,MAAMgB,iBAAiB,GAAGhB,GAAG,EAAE;IAC/B,MAAMiB,GAAG,GACL,uEAAuE;IAE3E,MAAMC,mBAAmB,GAAGjB,QAAQ,CAAC;MACjCkB,KAAK,EAAE,CACH;QAAEC,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO,CAAC,CACxD;MACDC,WAAW,EAAE,CACT;QAAEH,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO,CAAC,CACxD;MACDE,MAAM,EAAE,CACJ;QAAEJ,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO,CAAC;IAE7D,CAAC,CAAC;IAEF,MAAMG,aAAa,GAAGzB,GAAG,CAAC,MAAM,CAAC;IACjC,MAAMc,IAAI,GAAGd,GAAG,CAAC,OAAO,CAAC;IAGzBD,SAAS,CAAC,MAAM;MACZ2B,uBAAuB,EAAE;IAC7B,CAAC,CAAC;IAGF,MAAMA,uBAAuB,GAAG,YAAY;MACxC,MAAMC,GAAG,GAAG,MAAMxB,mBAAmB,CAACK,GAAG,CAAC;MAC1C;MACA,IAAImB,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACpB,OAAOvB,SAAS,CAACQ,KAAK,CAAC,WAAW,CAAC;MACvC;MACAE,cAAc,CAACc,KAAK,GAAGF,GAAG,CAACG,IAAI;IACnC,CAAC;;IAED;IACA,MAAMC,SAAS,GAAG,MAAM;MACpB;MACAL,uBAAuB,EAAE;IAC7B,CAAC;;IAED;IACA,MAAMM,QAAQ,GAAG,YAAY;MACzB;MACA,MAAML,GAAG,GAAG,MAAMvB,mBAAmB,CAACW,cAAc,CAACc,KAAK,CAAC;MAC3DI,OAAO,CAACC,GAAG,CAACP,GAAG,CAAC;IACpB,CAAC;;IAID;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA","names":["onMounted","ref","reactive","useRoute","getQuestionListById","changeQuestionState","ElMessage","Plus","route","_id","query","beforeAvatarUpload","rawFile","type","error","size","QuestionDetail","QuestionDetailRef","src","QuestionDetailRules","title","required","message","trigger","description","degree","labelPosition","getQuestionListByIdView","res","status","value","data","resetForm","editInfo","console","log"],"sources":["D:/前端基础/22科技月评-算法在线刷题平台/algorithmic_platform/src/components/Question/Update.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-card>\r\n            <el-form ref=\"QuestionDetailRef\" :label-position=\"labelPosition\" label-width=\"100px\" :model=\"QuestionDetail\"\r\n                :rules=\"QuestionDetailRules\" style=\"max-width: 800px\" :size=\"size\">\r\n                <el-form-item prop=\"title\" label=\"题目\">\r\n                    <el-input v-model=\"QuestionDetail.title\" type=\"textarea\" />\r\n                </el-form-item>\r\n                <el-form-item prop=\"description\" label=\"题目描述\">\r\n                    <el-input v-model=\"QuestionDetail.description\" type=\"textarea\" />\r\n                </el-form-item>\r\n                <el-form-item prop=\"degree\" label=\"难度等级\">\r\n                    <el-input v-model=\"QuestionDetail.degree\" />\r\n                </el-form-item>\r\n                <el-form-item prop=\"submit\" label=\"提交次数\">\r\n                    <el-input v-model=\"QuestionDetail.submit\" disabled />\r\n                </el-form-item>\r\n                <el-form-item prop=\"pass\" label=\"通过次数\">\r\n                    <el-input v-model=\"QuestionDetail.pass\" disabled />\r\n                </el-form-item>\r\n                <el-form-item label=\"状态\" prop=\"state\">\r\n                    <el-tag class=\"ml-2\" v-if=\"QuestionDetail.state === true\" type=\"success\" size=\"large\"> 已发布\r\n                    </el-tag>\r\n                    <el-tag class=\"ml-2\" v-if=\"QuestionDetail.state === false\" type=\"\" size=\"large\"> 待发布\r\n                    </el-tag>\r\n                </el-form-item>\r\n                <el-form-item label=\"详情图片\" prop=\"is_promote\">\r\n                    <el-upload class=\"avatar-uploader\"\r\n                        action=\"https://run.mocky.io/v3/9d059bf9-4660-45f2-925d-ce80ad6c4d15\" :show-file-list=\"false\"\r\n                        :on-success=\"handleAvatarSuccess\" :before-upload=\"beforeAvatarUpload\">\r\n                        <img v-if=\"imageUrl\" :src=\"imageUrl\" class=\"avatar\" />\r\n                        <el-icon v-else class=\"avatar-uploader-icon\">\r\n                            <Plus />\r\n                        </el-icon>\r\n                    </el-upload>\r\n                </el-form-item>\r\n            </el-form>\r\n            <el-button type=\"primary\" @click=\"editInfo\" size=\"large\"> 确定 </el-button>\r\n            <el-button type=\"info\" @click=\"resetForm(QuestionDetailRef)\" size=\"large\">取消</el-button>\r\n\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, ref, reactive } from 'vue'\r\nimport { useRoute } from 'vue-router'\r\nimport { getQuestionListById, changeQuestionState } from '@/axios/apis.js'\r\nimport { ElMessage } from \"element-plus\";\r\n\r\nimport { Plus } from '@element-plus/icons-vue'\r\n\r\nconst route = useRoute()\r\n\r\n//接收跳转携带过来的参数Id\r\nlet _id = route.query._id;\r\nconst beforeAvatarUpload = (rawFile) => {\r\n    if (rawFile.type !== 'image/jpeg') {\r\n        ElMessage.error('图片必须是JPG格式!')\r\n        return false\r\n    } else if (rawFile.size / 1024 / 1024 > 2) {\r\n        ElMessage.error('图片大小不能超过2MB!')\r\n        return false\r\n    }\r\n    return true\r\n}\r\n\r\nconst QuestionDetail = ref({})\r\nconst QuestionDetailRef = ref()\r\nconst src =\r\n    'https://cube.elemecdn.com/6/94/4d3ea53c084bad6931a56d5158a48jpeg.jpeg'\r\n\r\nconst QuestionDetailRules = reactive({\r\n    title: [\r\n        { required: true, message: \"请输入题目\", trigger: \"blur\" },\r\n    ],\r\n    description: [\r\n        { required: true, message: \"请输入描述\", trigger: \"blur\" },\r\n    ],\r\n    degree: [\r\n        { required: true, message: \"请输入难度\", trigger: \"blur\" },\r\n    ],\r\n});\r\n\r\nconst labelPosition = ref('left')\r\nconst size = ref('large')\r\n\r\n\r\nonMounted(() => {\r\n    getQuestionListByIdView()\r\n})\r\n\r\n\r\nconst getQuestionListByIdView = async () => {\r\n    const res = await getQuestionListById(_id)\r\n    // console.log(res);\r\n    if (res.status !== 200) {\r\n        return ElMessage.error(\"获取此题目数据失败\");\r\n    }\r\n    QuestionDetail.value = res.data\r\n}\r\n\r\n//取消按钮\r\nconst resetForm = () => {\r\n    // QuestionDetailRef.value.resetFields()\r\n    getQuestionListByIdView()\r\n}\r\n\r\n//确定按钮\r\nconst editInfo = async () => {\r\n    // console.log(QuestionDetail.value);\r\n    const res = await changeQuestionState(QuestionDetail.value)\r\n    console.log(res);\r\n}\r\n\r\n\r\n\r\n///////////////////////////////\r\n// var checkPrice = (rule, value, cb) => {\r\n//     //验证价格的正则表达式\r\n//     let regPrice = /^[1-9]\\d*|0$/\r\n//     if (regPrice.test(value)) {\r\n//         cb();\r\n//     } else {\r\n//         cb(new Error(\"价格是不小于0的整数\"));\r\n//     }\r\n// }\r\n\r\n// var checkNumber = (rule, value, cb) => {\r\n//     //验证价格的正则表达式\r\n//     let regNumber = /^[1-9]\\d*|0$/\r\n//     if (regNumber.test(value)) {\r\n//         cb();\r\n//     } else {\r\n//         cb(new Error(\"数量是不小于0的整数\"));\r\n//     }\r\n// }\r\n// var checkWeight = (rule, value, cb) => {\r\n//     //验证价格的正则表达式\r\n//     let regWeight = /^[1-9]\\d*|0$/\r\n//     if (regWeight.test(value)) {\r\n//         cb();\r\n//     } else {\r\n//         cb(new Error(\"重量是不小于0的整数\"));\r\n//     }\r\n// }\r\n// const QuestionDetailRules = reactive({\r\n//     goods_price: [\r\n//         { required: true, message: \"请输入价格\", trigger: \"blur\" },\r\n//         { validator: checkPrice, trigger: \"blur\" },\r\n//     ],\r\n//     goods_number: [\r\n//         { required: true, message: \"请输入数量\", trigger: \"blur\" },\r\n//         { validator: checkNumber, trigger: \"blur\" },\r\n\r\n//     ],\r\n//     goods_weight: [\r\n//         { required: true, message: \"请输入重量\", trigger: \"blur\" },\r\n//         { validator: checkWeight, trigger: \"blur\" },\r\n//     ],\r\n// });\r\n\r\n\r\n</script>\r\n\r\n<style  lang=\"less\" scoped>\r\n.imgSrc {\r\n    width: 300px;\r\n}\r\n\r\n.avatar-uploader .avatar {\r\n    width: 178px;\r\n    height: 178px;\r\n    display: block;\r\n}\r\n\r\n.avatar-uploader .el-upload {\r\n    border: 1px dashed var(--el-border-color);\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    position: relative;\r\n    overflow: hidden;\r\n    transition: var(--el-transition-duration-fast);\r\n}\r\n\r\n.avatar-uploader .el-upload:hover {\r\n    border-color: var(--el-color-primary);\r\n}\r\n\r\n.el-icon.avatar-uploader-icon {\r\n    font-size: 28px;\r\n    color: #8c939d;\r\n    width: 178px;\r\n    height: 178px;\r\n    text-align: center;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}