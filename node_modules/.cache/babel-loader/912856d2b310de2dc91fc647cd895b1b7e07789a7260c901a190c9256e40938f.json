{"ast":null,"code":"import { onMounted, reactive, ref } from 'vue';\nimport { getUserList, changeUserState } from '@/axios/apis';\nimport { ElMessage } from 'element-plus';\nexport default {\n  __name: 'index',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const queryInfo = reactive({\n      query: \"\",\n      pagenum: 1,\n      pagesize: 10\n    });\n    const usersData = ref([]);\n    const total = ref(0);\n    onMounted(async () => {\n      const res = await getUserList(queryInfo);\n      if (res.meta.status !== 200) {\n        return ElMessage.error('获取用户列表失败');\n      }\n      // console.log(res);\n      usersData.value = res.data.users;\n    });\n\n    // 监听 switch 开头状态的改变\n    const userStateChanged = async userInfo => {\n      const res = await changeUserState(userInfo);\n      console.log(res);\n      if (res.meta.status !== 200) {\n        userInfo.mg_state = !userInfo.mg_state;\n        return ElMessage.error('更新用户状态失败');\n      }\n      ElMessage({\n        message: '更新用户状态成功',\n        type: 'success'\n      });\n    };\n    const __returned__ = {\n      queryInfo,\n      usersData,\n      total,\n      userStateChanged,\n      onMounted,\n      reactive,\n      ref,\n      get getUserList() {\n        return getUserList;\n      },\n      get changeUserState() {\n        return changeUserState;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AAoEA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,GAAG,QAAQ,KAAK;AAC9C,SAASC,WAAW,EAAEC,eAAe,QAAQ,cAAc;AAE3D,SAASC,SAAS,QAAQ,cAAc;;;;;;;IACxC,MAAMC,SAAS,GAAGL,QAAQ,CAAC;MACvBM,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE;IACd,CAAC,CAAC;IAEF,MAAMC,SAAS,GAAGR,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMS,KAAK,GAAGT,GAAG,CAAC,CAAC,CAAC;IAEpBF,SAAS,CAAC,YAAY;MAClB,MAAMY,GAAG,GAAG,MAAMT,WAAW,CAACG,SAAS,CAAC;MAExC,IAAIM,GAAG,CAACC,IAAI,CAACC,MAAM,KAAK,GAAG,EAAE;QACzB,OAAOT,SAAS,CAACU,KAAK,CAAC,UAAU,CAAC;MACtC;MACA;MACAL,SAAS,CAACM,KAAK,GAAGJ,GAAG,CAACK,IAAI,CAACC,KAAK;IACpC,CAAC,CAAC;;IAEF;IACA,MAAMC,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;MACzC,MAAMR,GAAG,GAAG,MAAMR,eAAe,CAACgB,QAAQ,CAAC;MAC3CC,OAAO,CAACC,GAAG,CAACV,GAAG,CAAC;MAChB,IAAIA,GAAG,CAACC,IAAI,CAACC,MAAM,KAAK,GAAG,EAAE;QACzBM,QAAQ,CAACG,QAAQ,GAAG,CAACH,QAAQ,CAACG,QAAQ;QACtC,OAAOlB,SAAS,CAACU,KAAK,CAAC,UAAU,CAAC;MACtC;MACAV,SAAS,CAAC;QACNmB,OAAO,EAAE,UAAU;QACnBC,IAAI,EAAE;MACV,CAAC,CAAC;IACN,CAAC","names":["onMounted","reactive","ref","getUserList","changeUserState","ElMessage","queryInfo","query","pagenum","pagesize","usersData","total","res","meta","status","error","value","data","users","userStateChanged","userInfo","console","log","mg_state","message","type"],"sources":["D:/前端基础/22科技月评-算法在线刷题平台/algorithmic_platform/src/components/userList/index.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <!-- 面包屑导航区域 -->\r\n        <el-breadcrumb separator=\">\">\r\n            <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n            <el-breadcrumb-item>用户管理</el-breadcrumb-item>\r\n            <el-breadcrumb-item>用户列表</el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n\r\n        <!-- 卡片视图区域 -->\r\n        <el-card class=\"box-card\">\r\n            <!-- 搜索区域 -->\r\n            <template #header>\r\n                <div class=\"card-header\">\r\n                    <el-row :gutter=\"25\">\r\n                        <el-col :span=\"9\">\r\n                            <el-input placeholder=\"请输入内容\" clearable>\r\n                            </el-input>\r\n                        </el-col>\r\n                        <el-col :span=\"3\">\r\n                            <el-button type=\"primary\">查询</el-button>\r\n                        </el-col>\r\n                    </el-row>\r\n                </div>\r\n            </template>\r\n\r\n            <!-- 用户列表区域 -->\r\n            <el-table :data=\"usersData\" border style=\"width: 100%\">\r\n                <el-table-column type=\"index\" label=\"id\" />\r\n                <el-table-column prop=\"username\" label=\"用户名\" />\r\n                <el-table-column prop=\"mobile\" label=\"电话\" />\r\n                <el-table-column prop=\"role_name\" label=\"角色\" />\r\n                <el-table-column prop=\"email\" label=\"邮箱\" />\r\n                <el-table-column label=\"状态\" prop=\"mg_state\">\r\n                    <!-- 用插槽包裹el-switch开关 -->\r\n                    <template v-slot=\"scope\">\r\n                        <span>封禁</span>\r\n                        <el-switch v-model=\"scope.row.mg_state\" @change=\"userStateChanged(scope.row)\" />\r\n                        <span>启用</span>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column prop=\"role\" label=\"操作\">\r\n                    <template v-slot=\"scope\">\r\n                        <!-- 修改按钮 -->\r\n                        <el-icon>\r\n                            <EditPen />\r\n                        </el-icon>\r\n                        <el-button type=\"primary\" circle @click=\"showEditDialog(scope.row.id)\">\r\n                        </el-button>\r\n                        <!-- 删除按钮 -->\r\n                        <el-button type=\"danger\" icon=\"el-icon-delete\" circle @click=\"removeUserById(scope.row.id)\">\r\n                        </el-button>\r\n                        <!-- 分配角色按钮 -->\r\n                        <el-tooltip class=\"item\" effect=\"dark\" content=\"角色分配\" placement=\"top\" :enterable=\"false\">\r\n                            <el-button type=\"warning\" icon=\"el-icon-setting\" circle @click=\"setRole(scope.row)\">\r\n                            </el-button>\r\n                        </el-tooltip>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n        </el-card>\r\n\r\n\r\n\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, reactive, ref } from 'vue';\r\nimport { getUserList, changeUserState } from '@/axios/apis'\r\n\r\nimport { ElMessage } from 'element-plus'\r\nconst queryInfo = reactive({\r\n    query: \"\",\r\n    pagenum: 1,\r\n    pagesize: 10,\r\n})\r\n\r\nconst usersData = ref([])\r\nconst total = ref(0)\r\n\r\nonMounted(async () => {\r\n    const res = await getUserList(queryInfo)\r\n\r\n    if (res.meta.status !== 200) {\r\n        return ElMessage.error('获取用户列表失败')\r\n    }\r\n    // console.log(res);\r\n    usersData.value = res.data.users\r\n})\r\n\r\n// 监听 switch 开头状态的改变\r\nconst userStateChanged = async (userInfo) => {\r\n    const res = await changeUserState(userInfo)\r\n    console.log(res);\r\n    if (res.meta.status !== 200) {\r\n        userInfo.mg_state = !userInfo.mg_state\r\n        return ElMessage.error('更新用户状态失败')\r\n    }\r\n    ElMessage({\r\n        message: '更新用户状态成功',\r\n        type: 'success',\r\n    })\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}