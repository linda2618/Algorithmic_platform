{"ast":null,"code":"import { onMounted, reactive, ref } from 'vue';\nimport { getUserList, changeUserState, putEditUsers } from '@/axios/apis';\nimport { ElMessage } from 'element-plus';\nexport default {\n  __name: 'index',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const queryInfo = reactive({\n      query: \"\",\n      pagenum: 1,\n      pagesize: 10\n    });\n    const usersData = ref([]);\n    const total = ref(0);\n    //查询到的用户信息对象\n    const editForm = reactive({});\n    onMounted(async () => {\n      const res = await getUserList(queryInfo);\n      if (res.meta.status !== 200) {\n        return ElMessage.error('获取用户列表失败');\n      }\n      // console.log(res);\n      usersData.value = res.data.users;\n    });\n\n    // 监听 switch 开头状态的改变\n    const userStateChanged = async userInfo => {\n      const res = await changeUserState(userInfo);\n      console.log(res);\n      if (res.meta.status !== 200) {\n        userInfo.mg_state = !userInfo.mg_state;\n        return ElMessage.error('更新用户状态失败');\n      }\n      ElMessage({\n        message: '更新用户状态成功',\n        type: 'success'\n      });\n    };\n\n    //修改按钮\n    const showEditDialog = async id => {\n      //展示编辑用户的对话框\n      console.log(id);\n      const res = await putEditUsers(id);\n      console.log(res);\n      if (res.meta.status !== 200) {\n        return ElMessage.error(\"查询用户信息失败\");\n      }\n      this.editForm = res.data;\n      this.editDialogVisible = true;\n    };\n\n    //删除按钮,根据id 删除对应用户信息\n    const removeUserById = async id => {\n      //弹框询问用户是否删除数据\n      const confirmRes = await this.$confirm(\"此操作将永久删除该用户, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).catch(err => err);\n      //如果用户 确认 删除,则返回值为 字符串 confirm\n      //如果用户 取消了删除,则返回值为 字符串 cancel\n      // console.log(confirmRes);\n      if (confirmRes !== \"confirm\") {\n        return this.$message.info(\"已取消删除\");\n      }\n      const {\n        data: res\n      } = await this.$http.delete(\"users/\" + id);\n      if (res.meta.status !== 200) {\n        return this.$message.error(\"删除用户失败\");\n      }\n      this.$message.success(\"删除用户成功\");\n      this.getUserList();\n    };\n    const __returned__ = {\n      queryInfo,\n      usersData,\n      total,\n      editForm,\n      userStateChanged,\n      showEditDialog,\n      removeUserById,\n      onMounted,\n      reactive,\n      ref,\n      get getUserList() {\n        return getUserList;\n      },\n      get changeUserState() {\n        return changeUserState;\n      },\n      get putEditUsers() {\n        return putEditUsers;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"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","names":["onMounted","reactive","ref","getUserList","changeUserState","putEditUsers","ElMessage","queryInfo","query","pagenum","pagesize","usersData","total","editForm","res","meta","status","error","value","data","users","userStateChanged","userInfo","console","log","mg_state","message","type","showEditDialog","id","editDialogVisible","removeUserById","confirmRes","$confirm","confirmButtonText","cancelButtonText","catch","err","$message","info","$http","delete","success"],"sources":["D:/前端基础/22科技月评-算法在线刷题平台/algorithmic_platform/src/components/userList/index.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <!-- 面包屑导航区域 -->\r\n        <el-breadcrumb separator=\">\">\r\n            <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n            <el-breadcrumb-item>用户管理</el-breadcrumb-item>\r\n            <el-breadcrumb-item>用户列表</el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n\r\n        <!-- 卡片视图区域 -->\r\n        <el-card class=\"box-card\">\r\n            <!-- 搜索区域 -->\r\n            <template #header>\r\n                <div class=\"card-header\">\r\n                    <el-row :gutter=\"25\">\r\n                        <el-col :span=\"9\">\r\n                            <el-input placeholder=\"请输入内容\" clearable>\r\n                            </el-input>\r\n                        </el-col>\r\n                        <el-col :span=\"3\">\r\n                            <el-button type=\"primary\">查询</el-button>\r\n                        </el-col>\r\n                    </el-row>\r\n                </div>\r\n            </template>\r\n\r\n            <!-- 用户列表区域 -->\r\n            <el-table :data=\"usersData\" border style=\"width: 100%\">\r\n                <el-table-column type=\"index\" label=\"id\" />\r\n                <el-table-column prop=\"username\" label=\"用户名\" />\r\n                <el-table-column prop=\"mobile\" label=\"电话\" />\r\n                <el-table-column prop=\"role_name\" label=\"角色\" />\r\n                <el-table-column prop=\"email\" label=\"邮箱\" />\r\n                <el-table-column label=\"状态\" prop=\"mg_state\">\r\n                    <!-- 用插槽包裹el-switch开关 -->\r\n                    <template v-slot=\"scope\">\r\n                        <span>封禁</span>\r\n                        <el-switch v-model=\"scope.row.mg_state\" @change=\"userStateChanged(scope.row)\" />\r\n                        <span>启用</span>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"操作\">\r\n                    <template v-slot=\"scope\">\r\n                        <!-- 修改按钮 -->\r\n                        <el-button type=\"primary\" class=\"iconfont icon-zuoti\" circle\r\n                            @click=\"showEditDialog(scope.row.id)\" size=\"large\">\r\n                        </el-button>\r\n                        <!-- 删除按钮 -->\r\n                        <el-button type=\"danger\" class=\"iconfont icon-shanchu2\" circle\r\n                            @click=\"removeUserById(scope.row.id)\" size=\"large\">\r\n                        </el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n        </el-card>\r\n\r\n\r\n        <!-- 修改用户的对话框 -->\r\n        <el-dialog title=\"修改用户\" v-model=\"dialogVisible\" width=\"40%\" :before-close=\"handleClose\">\r\n            <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"80px\">\r\n                <el-form-item label=\"用户名\">\r\n                    <el-input v-model=\"editForm.username\" disabled></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"电话\" prop=\"mobile\">\r\n                    <el-input v-model=\"editForm.mobile\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"邮箱\" prop=\"email\">\r\n                    <el-input v-model=\"editForm.email\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"editUserInfo\">确 定</el-button>\r\n            </span>\r\n\r\n            <!-- /// -->\r\n            <el-form :label-position=\"labelPosition\" label-width=\"100px\" :model=\"formLabelAlign\"\r\n                style=\"max-width: 460px\">\r\n                <el-form-item label=\"Name\">\r\n                    <el-input v-model=\"formLabelAlign.name\" />\r\n                </el-form-item>\r\n                <el-form-item label=\"Activity zone\">\r\n                    <el-input v-model=\"formLabelAlign.region\" />\r\n                </el-form-item>\r\n                <el-form-item label=\"Activity form\">\r\n                    <el-input v-model=\"formLabelAlign.type\" />\r\n                </el-form-item>\r\n            </el-form>\r\n        </el-dialog>\r\n\r\n\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, reactive, ref } from 'vue';\r\nimport { getUserList, changeUserState, putEditUsers } from '@/axios/apis'\r\n\r\nimport { ElMessage } from 'element-plus'\r\nconst queryInfo = reactive({\r\n    query: \"\",\r\n    pagenum: 1,\r\n    pagesize: 10,\r\n})\r\n\r\nconst usersData = ref([])\r\nconst total = ref(0)\r\n//查询到的用户信息对象\r\nconst editForm = reactive({})\r\n\r\nonMounted(async () => {\r\n    const res = await getUserList(queryInfo)\r\n\r\n    if (res.meta.status !== 200) {\r\n        return ElMessage.error('获取用户列表失败')\r\n    }\r\n    // console.log(res);\r\n    usersData.value = res.data.users\r\n})\r\n\r\n// 监听 switch 开头状态的改变\r\nconst userStateChanged = async (userInfo) => {\r\n    const res = await changeUserState(userInfo)\r\n    console.log(res);\r\n    if (res.meta.status !== 200) {\r\n        userInfo.mg_state = !userInfo.mg_state\r\n        return ElMessage.error('更新用户状态失败')\r\n    }\r\n    ElMessage({\r\n        message: '更新用户状态成功',\r\n        type: 'success',\r\n    })\r\n}\r\n\r\n//修改按钮\r\nconst showEditDialog = async (id) => {\r\n    //展示编辑用户的对话框\r\n    console.log(id);\r\n    const res = await putEditUsers(id);\r\n    console.log(res);\r\n    if (res.meta.status !== 200) {\r\n        return ElMessage.error(\"查询用户信息失败\");\r\n    }\r\n    this.editForm = res.data;\r\n    this.editDialogVisible = true;\r\n\r\n}\r\n\r\n//删除按钮,根据id 删除对应用户信息\r\nconst removeUserById = async (id) => {\r\n    //弹框询问用户是否删除数据\r\n    const confirmRes = await this.$confirm(\r\n        \"此操作将永久删除该用户, 是否继续?\",\r\n        \"提示\",\r\n        {\r\n            confirmButtonText: \"确定\",\r\n            cancelButtonText: \"取消\",\r\n            type: \"warning\",\r\n        }\r\n    ).catch((err) => err);\r\n    //如果用户 确认 删除,则返回值为 字符串 confirm\r\n    //如果用户 取消了删除,则返回值为 字符串 cancel\r\n    // console.log(confirmRes);\r\n    if (confirmRes !== \"confirm\") {\r\n        return this.$message.info(\"已取消删除\");\r\n    }\r\n    const { data: res } = await this.$http.delete(\"users/\" + id);\r\n\r\n    if (res.meta.status !== 200) {\r\n        return this.$message.error(\"删除用户失败\");\r\n    }\r\n    this.$message.success(\"删除用户成功\");\r\n    this.getUserList();\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}