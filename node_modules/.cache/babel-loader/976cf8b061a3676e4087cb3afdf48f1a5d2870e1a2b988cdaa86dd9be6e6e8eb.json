{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createElementVNode as _createElementVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_breadcrumb_item = _resolveComponent(\"el-breadcrumb-item\");\n  const _component_el_breadcrumb = _resolveComponent(\"el-breadcrumb\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_tooltip = _resolveComponent(\"el-tooltip\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_pagination = _resolveComponent(\"el-pagination\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" 商品列表代替 \"), _createElementVNode(\"div\", null, [_createCommentVNode(\" 面包屑导航区域 \"), _createVNode(_component_el_breadcrumb, {\n    separator: \">\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_breadcrumb_item, {\n      to: {\n        path: '/home'\n      }\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"首页\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_breadcrumb_item, null, {\n      default: _withCtx(() => [_createTextVNode(\"题目管理\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_breadcrumb_item, null, {\n      default: _withCtx(() => [_createTextVNode(\"题目列表\")]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_card, null, {\n    default: _withCtx(() => [_createCommentVNode(\" 搜索区域\\r\\n            <template #header>\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <el-row :gutter=\\\"25\\\">\\r\\n                        <el-col :span=\\\"9\\\">\\r\\n                            <el-input placeholder=\\\"请输入内容\\\" v-model=\\\"queryInfo.query\\\" clearable @clear=\\\"getUserListView\\\">\\r\\n                            </el-input>\\r\\n                        </el-col>\\r\\n                        <el-col :span=\\\"3\\\">\\r\\n                            <el-button type=\\\"primary\\\" @click=\\\"getUserListView\\\">查询</el-button>\\r\\n                        </el-col>\\r\\n                    </el-row>\\r\\n                </div>\\r\\n            </template> \"), _createVNode(_component_el_tag, {\n      class: \"header-title\",\n      size: \"large\",\n      type: \"success\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"题目列表\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table, {\n      data: $setup.questionList,\n      stripe: \"\",\n      border: \"\",\n      style: {\n        \"width\": \"100%\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        type: \"index\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"title\",\n        label: \"题目\",\n        width: \"260\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"description\",\n        label: \"题目描述\",\n        width: \"540\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"degree\",\n        label: \"难度等级\",\n        width: \"110\"\n      }, {\n        default: _withCtx(scope => [scope.row.degree === '简单' ? (_openBlock(), _createBlock(_component_el_tag, {\n          key: 0,\n          type: \"primary\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"简单\")]),\n          _: 1 /* STABLE */\n        })) : _createCommentVNode(\"v-if\", true), scope.row.degree === '困难' ? (_openBlock(), _createBlock(_component_el_tag, {\n          key: 1,\n          type: \"danger\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"困难\")]),\n          _: 1 /* STABLE */\n        })) : scope.row.degree === '中等' ? (_openBlock(), _createBlock(_component_el_tag, {\n          key: 2,\n          type: \"success\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"中等\")]),\n          _: 1 /* STABLE */\n        })) : _createCommentVNode(\"v-if\", true)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_table_column, {\n        prop: \"submit\",\n        label: \"提交次数\",\n        width: \"110\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"pass\",\n        label: \"通过次数\",\n        width: \"110\"\n      }), _createVNode(_component_el_table_column, {\n        label: \"状态\",\n        prop: \"state\",\n        width: \"110\"\n      }, {\n        default: _withCtx(scope => [scope.row.state === true ? (_openBlock(), _createBlock(_component_el_tag, {\n          key: 0,\n          type: \"success\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"已发布\")]),\n          _: 1 /* STABLE */\n        })) : (_openBlock(), _createBlock(_component_el_tag, {\n          key: 1,\n          type: \"\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"待发布\")]),\n          _: 1 /* STABLE */\n        }))]),\n\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_table_column, {\n        prop: \"add_time\",\n        label: \"添加时间\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"upd_time\",\n        label: \"更新时间\"\n      }), _createVNode(_component_el_table_column, {\n        label: \"操作\",\n        width: \"150\"\n      }, {\n        default: _withCtx(scope => [_createCommentVNode(\" 修改按钮 \"), _createVNode(_component_el_tooltip, {\n          class: \"item\",\n          effect: \"dark\",\n          content: \"跳转修改题目\",\n          placement: \"top\",\n          enterable: false\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            type: \"primary\",\n            class: \"iconfont icon-zuoti\",\n            circle: \"\",\n            onClick: $event => $setup.goUpdatePage(scope.row._id),\n            size: \"large\"\n          }, null, 8 /* PROPS */, [\"onClick\"])]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */), _createCommentVNode(\" 删除按钮 \"), _createVNode(_component_el_button, {\n          type: \"danger\",\n          class: \"iconfont icon-shanchu2\",\n          circle: \"\",\n          onClick: $event => $setup.removeQuestionById(scope.row._id),\n          size: \"large\"\n        }, null, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\"]), _createCommentVNode(\" 分页区域 \"), _createVNode(_component_el_pagination, {\n      onCurrentChange: $setup.handleCurrentChange,\n      \"current-page\": $setup.queryInfo.page,\n      \"page-sizes\": [5, 10, 15],\n      layout: \"total, sizes, prev, pager, next, jumper\",\n      total: $setup.total\n    }, null, 8 /* PROPS */, [\"current-page\", \"total\"])]),\n    _: 1 /* STABLE */\n  })])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"mappings":"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","names":["_createCommentVNode","_createElementVNode","_createVNode","_component_el_breadcrumb","separator","_component_el_breadcrumb_item","to","path","_component_el_card","_component_el_tag","class","size","type","_component_el_table","data","$setup","stripe","border","style","_component_el_table_column","prop","label","width","scope","row","degree","_createBlock","state","_component_el_tooltip","effect","content","placement","enterable","_component_el_button","circle","onClick","_id","_component_el_pagination","onCurrentChange","page","layout","total"],"sourceRoot":"","sources":["D:\\前端基础\\22科技月评-算法在线刷题平台\\algorithmic_platform\\src\\components\\Question\\index.vue"],"sourcesContent":["<template>\r\n    <!-- 商品列表代替 -->\r\n    <div>\r\n        <!-- 面包屑导航区域 -->\r\n        <el-breadcrumb separator=\">\">\r\n            <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n            <el-breadcrumb-item>题目管理</el-breadcrumb-item>\r\n            <el-breadcrumb-item>题目列表</el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n\r\n        <el-card>\r\n\r\n            <!-- 搜索区域\r\n            <template #header>\r\n                <div class=\"card-header\">\r\n                    <el-row :gutter=\"25\">\r\n                        <el-col :span=\"9\">\r\n                            <el-input placeholder=\"请输入内容\" v-model=\"queryInfo.query\" clearable @clear=\"getUserListView\">\r\n                            </el-input>\r\n                        </el-col>\r\n                        <el-col :span=\"3\">\r\n                            <el-button type=\"primary\" @click=\"getUserListView\">查询</el-button>\r\n                        </el-col>\r\n                    </el-row>\r\n                </div>\r\n            </template> -->\r\n\r\n            <el-tag class=\"header-title\" size=\"large\" type=\"success\">题目列表</el-tag>\r\n            <el-table :data=\"questionList\" stripe border style=\"width: 100%\">\r\n                <el-table-column type=\"index\" />\r\n                <el-table-column prop=\"title\" label=\"题目\" width=\"260\" />\r\n                <el-table-column prop=\"description\" label=\"题目描述\" width=\"540\" />\r\n                <el-table-column prop=\"degree\" label=\"难度等级\" width=\"110\">\r\n                    <template v-slot=\"scope\">\r\n                        <el-tag type=\"primary\" v-if=\"scope.row.degree === '简单'\">简单</el-tag>\r\n                        <el-tag type=\"danger\" v-if=\"scope.row.degree === '困难'\">困难</el-tag>\r\n                        <el-tag type=\"success\" v-else-if=\"scope.row.degree === '中等'\">中等</el-tag>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column prop=\"submit\" label=\"提交次数\" width=\"110\" />\r\n                <el-table-column prop=\"pass\" label=\"通过次数\" width=\"110\" />\r\n                <el-table-column label=\"状态\" prop=\"state\" width=\"110\">\r\n                    <template v-slot=\"scope\">\r\n                        <el-tag type=\"success\" v-if=\"scope.row.state === true\">已发布</el-tag>\r\n                        <el-tag type=\"\" v-else>待发布</el-tag>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column prop=\"add_time\" label=\"添加时间\" />\r\n                <el-table-column prop=\"upd_time\" label=\"更新时间\" />\r\n                <el-table-column label=\"操作\" width=\"150\">\r\n                    <template v-slot=\"scope\">\r\n                        <!-- 修改按钮 -->\r\n                        <el-tooltip class=\"item\" effect=\"dark\" content=\"跳转修改题目\" placement=\"top\" :enterable=\"false\">\r\n                            <el-button type=\"primary\" class=\"iconfont icon-zuoti\" circle\r\n                                @click=\"goUpdatePage(scope.row._id)\" size=\"large\">\r\n                            </el-button>\r\n                        </el-tooltip>\r\n                        <!-- 删除按钮 -->\r\n                        <el-button type=\"danger\" class=\"iconfont icon-shanchu2\" circle\r\n                            @click=\"removeQuestionById(scope.row._id)\" size=\"large\">\r\n                        </el-button>\r\n\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n            <!-- 分页区域 -->\r\n            <el-pagination @current-change=\"handleCurrentChange\" :current-page=\"queryInfo.page\"\r\n                :page-sizes=\"[5, 10, 15]\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\r\n            </el-pagination>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref, onMounted } from \"vue\";\r\nimport { useRouter } from 'vue-router'\r\nimport { getQuestionList, deleteOneGood } from \"@/axios/apis.js\";\r\nimport { ElMessage, ElMessageBox } from \"element-plus\";\r\nconst router = useRouter()\r\n\r\nconst queryInfo = reactive({\r\n    page: 1,\r\n});\r\n\r\nconst questionList = ref([]);\r\nconst selectList = ref([]);\r\nconst dataList = ref([]);\r\nconst total = ref(0);\r\n\r\nonMounted(() => {\r\n    getQuestionListView()\r\n});\r\n\r\n//获取商品列表\r\nconst getQuestionListView = async () => {\r\n    const res = await getQuestionList(queryInfo);\r\n    // console.log(res);\r\n    if (res.status === 200) {\r\n        questionList.value = res.data;\r\n        total.value = res.total;\r\n    }\r\n};\r\n\r\n\r\n//分页功能\r\nconst handleCurrentChange = (newPage) => {\r\n    queryInfo.page = newPage;\r\n    getQuestionListView();\r\n};\r\n\r\n//跳转后 修改题目详情\r\nconst goUpdatePage = (id) => {\r\n    // console.log(id);\r\n    router.push({ path: \"/home/question/update\", query: { _id: id } })\r\n}\r\n\r\n\r\n//删除商品\r\nconst removeQuestionById = async (_id) => {\r\n    const confirmRes = await ElMessageBox.confirm(\"此操作将永久删除该用户, 是否继续?\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n    }).catch((err) => err)\r\n\r\n    if (confirmRes !== \"confirm\") {\r\n        return ElMessage.error(\"已取消删除\");\r\n    }\r\n    const res = await deleteOneGood(_id)\r\n    // console.log(res);\r\n    if (res.status !== 200) {\r\n        return ElMessage.error(\"删除用户失败\");\r\n    }\r\n    ElMessage({\r\n        type: \"success\",\r\n        message: res.message,\r\n    });\r\n    getQuestionListView();\r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.header-title {\r\n    font-size: 18px;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.el-breadcrumb {\r\n    font-size: 20px;\r\n    margin-bottom: 30px;\r\n}\r\n\r\n.el-table {\r\n    font-size: 20px;\r\n\r\n    :deep(.cell) {\r\n        height: 92px;\r\n    }\r\n}\r\n\r\n// .description {\r\n//     // height: 120px;\r\n//     overflow: hidden;\r\n//     white-space: nowrap;\r\n//     text-overflow: ellipsis;\r\n// }\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}