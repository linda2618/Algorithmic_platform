{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_checkbox = _resolveComponent(\"el-checkbox\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n  const _component_el_tabs = _resolveComponent(\"el-tabs\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" vuex 页面中直接使用渲染时与vue2中的使用方法相同  \"), _createCommentVNode(\" <div id=\\\"box\\\" :class=\\\"{ type: store.state.showView }\\\">\\r\\n        <div class=\\\"login_box\\\">\\r\\n            <div class=\\\"close_box\\\" @click=\\\"handleClick\\\">\\r\\n                <span>x</span>\\r\\n            </div>\\r\\n            <div class=\\\"title\\\">\\r\\n                <h1>每日算法</h1>\\r\\n            </div>\\r\\n            <el-form ref=\\\"loginFormRef\\\" :model=\\\"login_Form\\\" status-icon :rules=\\\"loginRules\\\" label-width=\\\"100px\\\"\\r\\n                class=\\\"demo-ruleForm\\\">\\r\\n                <el-form-item label=\\\"账号名\\\" prop=\\\"username\\\" style=\\\"width:400px\\\">\\r\\n                    <el-input v-model=\\\"login_Form.username\\\" type=\\\"input\\\" size=\\\"large\\\" />\\r\\n                </el-form-item>\\r\\n                <el-form-item label=\\\"密码\\\" prop=\\\"password\\\" style=\\\"width:400px\\\">\\r\\n                    <el-input v-model=\\\"login_Form.password\\\" type=\\\"password\\\" autocomplete=\\\"off\\\" size=\\\"large\\\" />\\r\\n                </el-form-item>\\r\\n                <el-form-item>\\r\\n                    <el-button class=\\\"login_button\\\" type=\\\"primary\\\" plain @click=\\\"login\\\" size=\\\"large\\\">登录</el-button>\\r\\n                </el-form-item>\\r\\n                <el-form-item>\\r\\n                </el-form-item>\\r\\n            </el-form>\\r\\n        </div> \"), _createElementVNode(\"div\", {\n    id: \"box\",\n    class: _normalizeClass({\n      type: $setup.store.state.showView\n    })\n  }, [_createVNode(_component_el_tabs, {\n    type: \"card\",\n    class: \"demo-tabs\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_tab_pane, {\n      label: \"登录\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form, {\n        \"label-position\": \"right\",\n        \"label-width\": \"60px\",\n        style: {\n          \"max-width\": \"460px\"\n        },\n        class: \"loginForm\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_form_item, {\n          label: \"邮箱：\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: _ctx.Email,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.Email = $event)\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, {\n          label: \"密码：\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            type: \"password\",\n            modelValue: _ctx.password,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.password = $event)\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_row, null, {\n          default: _withCtx(() => [_createVNode(_component_el_checkbox, {\n            class: \"checkBox\",\n            modelValue: _ctx.isAgree,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.isAgree = $event),\n            label: \"同意用户使用准则\",\n            name: \"type\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _ctx.isAgree ? (_openBlock(), _createBlock(_component_el_button, {\n          key: 0,\n          type: \"primary\",\n          class: \"loginBtn\",\n          onClick: $setup.login\n        }, {\n          default: _withCtx(() => [_createTextVNode(\" 登录 \")]),\n          _: 1 /* STABLE */\n        })) : _createCommentVNode(\"v-if\", true)]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_tab_pane, {\n      label: \"注册\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form, {\n        \"label-position\": \"right\",\n        \"label-width\": \"100px\",\n        style: {\n          \"max-width\": \"460px\"\n        },\n        class: \"loginForm\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_form_item, {\n          label: \"邮箱：\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: _ctx.rEmail,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.rEmail = $event)\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, {\n          label: \"密码：\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            type: \"password\",\n            modelValue: _ctx.rPassword,\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.rPassword = $event)\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, {\n          label: \"确认密码：\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            type: \"password\",\n            modelValue: _ctx.confirmPassword,\n            \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.confirmPassword = $event),\n            onBlur: _ctx.confirmFunc\n          }, null, 8 /* PROPS */, [\"modelValue\", \"onBlur\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, {\n          label: \"验证码：\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_row, null, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              type: \"password\",\n              modelValue: _ctx.identifyCode,\n              \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.identifyCode = $event),\n              class: \"inpWidth\"\n            }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_button, {\n              type: \"primary\",\n              onClick: _ctx.getIdentifyCode,\n              plain: \"\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(\" 获取验证码 \")]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onClick\"])]),\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_row, null, {\n          default: _withCtx(() => [_createVNode(_component_el_checkbox, {\n            class: \"checkBox\",\n            modelValue: _ctx.rAgree,\n            \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => _ctx.rAgree = $event),\n            label: \"同意用户使用准则\",\n            name: \"type\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _ctx.rAgree ? (_openBlock(), _createBlock(_component_el_button, {\n          key: 0,\n          type: \"primary\",\n          class: \"loginBtn\",\n          onClick: _ctx.register\n        }, {\n          default: _withCtx(() => [_createTextVNode(\" 注册 \")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })], 2 /* CLASS */)], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;;;;;;;;6DAkKIA,sDAAsC,EACtCA,yvCAsBc,EACdC,oBAiDM;IAjDDC,EAAE,EAAC,KAAK;IAAEC,KAAK;MAAAC,MAAUC,YAAK,CAACC,KAAK,CAACC;IAAQ;MAC9CC,aA+CUC;IA/CDL,IAAI,EAAC,MAAM;IAACD,KAAK,EAAC;;sBACvB,MAgBc,CAhBdK,aAgBcE;MAhBDC,KAAK,EAAC;IAAI;wBACnB,MAcU,CAdVH,aAcUI;QAdD,gBAAc,EAAC,OAAO;QAAC,aAAW,EAAC,MAAM;QAACC,KAAwB,EAAxB;UAAA;QAAA,CAAwB;QAACV,KAAK,EAAC;;0BAC9E,MAEe,CAFfK,aAEeM;UAFDH,KAAK,EAAC;QAAK;4BACrB,MAA4B,CAA5BH,aAA4BO;wBAATC,UAAK;uEAALA,UAAK;;;YAE5BR,aAEeM;UAFDH,KAAK,EAAC;QAAK;4BACrB,MAA+C,CAA/CH,aAA+CO;YAArCX,IAAI,EAAC,UAAU;wBAAUY,aAAQ;uEAARA,aAAQ;;;YAG/CR,aAESS;4BADL,MAA+E,CAA/ET,aAA+EU;YAAlEf,KAAK,EAAC,UAAU;wBAAUa,YAAO;uEAAPA,YAAO;YAAEL,KAAK,EAAC,UAAU;YAACQ,IAAI,EAAC;;;YAEzDH,YAAO,kBAAxBI,aAEYC;;UAFcjB,IAAI,EAAC,SAAS;UAACD,KAAK,EAAC,UAAU;UAAEmB,OAAK,EAAEjB;;4BAAO,MAEzE,kBAFyE,MAEzE;;;;;;;QAIRG,aA2BcE;MA3BDC,KAAK,EAAC;IAAI;wBACnB,MAyBU,CAzBVH,aAyBUI;QAzBD,gBAAc,EAAC,OAAO;QAAC,aAAW,EAAC,OAAO;QAACC,KAAwB,EAAxB;UAAA;QAAA,CAAwB;QAACV,KAAK,EAAC;;0BAC/E,MAEe,CAFfK,aAEeM;UAFDH,KAAK,EAAC;QAAK;4BACrB,MAA6B,CAA7BH,aAA6BO;wBAAVC,WAAM;uEAANA,WAAM;;;YAE7BR,aAEeM;UAFDH,KAAK,EAAC;QAAK;4BACrB,MAAgD,CAAhDH,aAAgDO;YAAtCX,IAAI,EAAC,UAAU;wBAAUY,cAAS;uEAATA,cAAS;;;YAEhDR,aAEeM;UAFDH,KAAK,EAAC;QAAO;4BACvB,MAA0E,CAA1EH,aAA0EO;YAAhEX,IAAI,EAAC,UAAU;wBAAUY,oBAAe;uEAAfA,oBAAe;YAAGO,MAAI,EAAEP;;;YAE/DR,aAOeM;UAPDH,KAAK,EAAC;QAAM;4BACtB,MAKS,CALTH,aAKSS;8BAJL,MAAoE,CAApET,aAAoEO;cAA1DX,IAAI,EAAC,UAAU;0BAAUY,iBAAY;yEAAZA,iBAAY;cAAEb,KAAK,EAAC;qDACvDK,aAEYa;cAFDjB,IAAI,EAAC,SAAS;cAAEkB,OAAK,EAAEN,oBAAe;cAAEQ,KAAK,EAAL;;gCAAM,MAEzD,kBAFyD,SAEzD;;;;;;;YAIRhB,aAESS;4BADL,MAA8E,CAA9ET,aAA8EU;YAAjEf,KAAK,EAAC,UAAU;wBAAUa,WAAM;uEAANA,WAAM;YAAEL,KAAK,EAAC,UAAU;YAACQ,IAAI,EAAC;;;YAExDH,WAAM,kBAAvBI,aAEYC;;UAFajB,IAAI,EAAC,SAAS;UAACD,KAAK,EAAC,UAAU;UAAEmB,OAAK,EAAEN;;4BAAU,MAE3E,kBAF2E,MAE3E","names":["_createCommentVNode","_createElementVNode","id","class","type","$setup","state","showView","_createVNode","_component_el_tabs","_component_el_tab_pane","label","_component_el_form","style","_component_el_form_item","_component_el_input","_ctx","_component_el_row","_component_el_checkbox","name","_createBlock","_component_el_button","onClick","onBlur","plain"],"sourceRoot":"","sources":["D:\\前端基础\\22科技月评-算法在线刷题平台\\algorithmic_platform\\src\\pages\\Login\\index.vue"],"sourcesContent":["<!-- <template>\r\n    <div id=\"box\" :class=\"{ type: store.state.showView }\">\r\n        <el-tabs type=\"card\" class=\"demo-tabs\">\r\n            <el-tab-pane label=\"登录\">\r\n                <el-form label-position=\"right\" label-width=\"60px\" style=\"max-width: 460px\" class=\"loginForm\">\r\n                    <el-form-item label=\"邮箱：\">\r\n                        <el-input v-model=\"Email\" />\r\n                    </el-form-item>\r\n                    <el-form-item label=\"密码：\">\r\n                        <el-input type=\"password\" v-model=\"password\" />\r\n                    </el-form-item>\r\n\r\n                    <el-row>\r\n                        <el-checkbox class=\"checkBox\" v-model=\"isAgree\" label=\"同意用户使用准则\" name=\"type\" />\r\n                    </el-row>\r\n                    <el-button v-if=\"isAgree\" type=\"primary\" class=\"loginBtn\" @click=\"login\">\r\n                        登录\r\n                    </el-button>\r\n                </el-form>\r\n            </el-tab-pane>\r\n\r\n            <el-tab-pane label=\"注册\">\r\n                <el-form label-position=\"right\" label-width=\"100px\" style=\"max-width: 460px\" class=\"loginForm\">\r\n                    <el-form-item label=\"邮箱：\">\r\n                        <el-input v-model=\"rEmail\" />\r\n                    </el-form-item>\r\n                    <el-form-item label=\"密码：\">\r\n                        <el-input type=\"password\" v-model=\"rPassword\" />\r\n                    </el-form-item>\r\n                    <el-form-item label=\"确认密码：\">\r\n                        <el-input type=\"password\" v-model=\"confirmPassword\" @blur=\"confirmFunc\" />\r\n                    </el-form-item>\r\n                    <el-form-item label=\"验证码：\">\r\n                        <el-row>\r\n                            <el-input type=\"password\" v-model=\"identifyCode\" class=\"inpWidth\" />\r\n                            <el-button type=\"primary\" @click=\"getIdentifyCode\" plain>\r\n                                获取验证码\r\n                            </el-button>\r\n                        </el-row>\r\n                    </el-form-item>\r\n\r\n                    <el-row>\r\n                        <el-checkbox class=\"checkBox\" v-model=\"rAgree\" label=\"同意用户使用准则\" name=\"type\" />\r\n                    </el-row>\r\n                    <el-button v-if=\"rAgree\" type=\"primary\" class=\"loginBtn\" @click=\"register\">\r\n                        注册\r\n                    </el-button>\r\n                </el-form>\r\n            </el-tab-pane>\r\n        </el-tabs>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { reactive, ref } from 'vue'\r\nimport { loginApi } from '../../axios/apis'\r\nimport { useRouter } from 'vue-router';\r\n//按需引入 useStore()方法\r\nimport { useStore } from 'vuex'\r\nimport { ElMessage } from 'element-plus'\r\n\r\n\r\nconst router = useRouter()\r\n\r\n// Vue3中store类似于Vue2中this.$store\r\n// useStore()方法创建store对象，相当于src/store/index.js中的store实例对象\r\nconst store = useStore()\r\n\r\n// 修改showLoginView的值\r\nconst handleClick = () => {\r\n    //触发mutation, 用于同步修改state的信息\r\n    store.commit('changeStyle', !store.state.showLoginView)\r\n}\r\n\r\nconst form = reactive({\r\n    Email: \"\",\r\n    password: \"\",\r\n    isAgree: 0,\r\n});\r\nconst registerForm = reactive({\r\n    rEmail: \"\",\r\n    rPassword: \"\",\r\n    confirmPassword: \"\",\r\n    identifyCode: \"\",\r\n    rAgree: 0,\r\n});\r\n\r\n// 方法\r\n// 登录\r\nfunction login() {\r\n    console.log(form);\r\n}\r\n// 注册\r\nfunction register() {\r\n    console.log(\"注册\", registerForm);\r\n}\r\n// 获取验证码\r\nfunction getIdentifyCode() {\r\n    console.log(\"获取验证码\");\r\n}\r\n// 确认密码\r\n// function confirmFunc() {\r\n//   if (registerForm.confirmPassword !== registerForm.rPassword)\r\n//     alert(\"密码与确认密码不一致\");\r\n// }\r\nconst confirmFunc = () => {\r\n    if (registerForm.confirmPassword !== registerForm.rPassword)\r\n        ElMessage.error(\"密码与确认密码不一致.\");\r\n}\r\n</script>\r\n  \r\n<style scoped >\r\n#box {\r\n    z-index: 100;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    background-color: rgba(221, 221, 221, 0.5);\r\n     /* auto——效果和没有定义pointer-events属性相同，鼠标不会穿透当前层。 */\r\n    pointer-events: auto;\r\n}\r\n\r\n.loginBtn {\r\n    width: 100px;\r\n}\r\n\r\n.loginForm {\r\n    text-align: center;\r\n}\r\n\r\n.checkBox {\r\n    margin-left: 7px;\r\n}\r\n\r\n.inpWidth {\r\n    width: 165px;\r\n}\r\n</style>\r\n   -->\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<template>\r\n    <!-- vuex 页面中直接使用渲染时与vue2中的使用方法相同  -->\r\n    <!-- <div id=\"box\" :class=\"{ type: store.state.showView }\">\r\n        <div class=\"login_box\">\r\n            <div class=\"close_box\" @click=\"handleClick\">\r\n                <span>x</span>\r\n            </div>\r\n            <div class=\"title\">\r\n                <h1>每日算法</h1>\r\n            </div>\r\n            <el-form ref=\"loginFormRef\" :model=\"login_Form\" status-icon :rules=\"loginRules\" label-width=\"100px\"\r\n                class=\"demo-ruleForm\">\r\n                <el-form-item label=\"账号名\" prop=\"username\" style=\"width:400px\">\r\n                    <el-input v-model=\"login_Form.username\" type=\"input\" size=\"large\" />\r\n                </el-form-item>\r\n                <el-form-item label=\"密码\" prop=\"password\" style=\"width:400px\">\r\n                    <el-input v-model=\"login_Form.password\" type=\"password\" autocomplete=\"off\" size=\"large\" />\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button class=\"login_button\" type=\"primary\" plain @click=\"login\" size=\"large\">登录</el-button>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                </el-form-item>\r\n            </el-form>\r\n        </div> -->\r\n    <div id=\"box\" :class=\"{ type: store.state.showView }\">\r\n        <el-tabs type=\"card\" class=\"demo-tabs\">\r\n            <el-tab-pane label=\"登录\">\r\n                <el-form label-position=\"right\" label-width=\"60px\" style=\"max-width: 460px\" class=\"loginForm\">\r\n                    <el-form-item label=\"邮箱：\">\r\n                        <el-input v-model=\"Email\" />\r\n                    </el-form-item>\r\n                    <el-form-item label=\"密码：\">\r\n                        <el-input type=\"password\" v-model=\"password\" />\r\n                    </el-form-item>\r\n\r\n                    <el-row>\r\n                        <el-checkbox class=\"checkBox\" v-model=\"isAgree\" label=\"同意用户使用准则\" name=\"type\" />\r\n                    </el-row>\r\n                    <el-button v-if=\"isAgree\" type=\"primary\" class=\"loginBtn\" @click=\"login\">\r\n                        登录\r\n                    </el-button>\r\n                </el-form>\r\n            </el-tab-pane>\r\n\r\n            <el-tab-pane label=\"注册\">\r\n                <el-form label-position=\"right\" label-width=\"100px\" style=\"max-width: 460px\" class=\"loginForm\">\r\n                    <el-form-item label=\"邮箱：\">\r\n                        <el-input v-model=\"rEmail\" />\r\n                    </el-form-item>\r\n                    <el-form-item label=\"密码：\">\r\n                        <el-input type=\"password\" v-model=\"rPassword\" />\r\n                    </el-form-item>\r\n                    <el-form-item label=\"确认密码：\">\r\n                        <el-input type=\"password\" v-model=\"confirmPassword\" @blur=\"confirmFunc\" />\r\n                    </el-form-item>\r\n                    <el-form-item label=\"验证码：\">\r\n                        <el-row>\r\n                            <el-input type=\"password\" v-model=\"identifyCode\" class=\"inpWidth\" />\r\n                            <el-button type=\"primary\" @click=\"getIdentifyCode\" plain>\r\n                                获取验证码\r\n                            </el-button>\r\n                        </el-row>\r\n                    </el-form-item>\r\n\r\n                    <el-row>\r\n                        <el-checkbox class=\"checkBox\" v-model=\"rAgree\" label=\"同意用户使用准则\" name=\"type\" />\r\n                    </el-row>\r\n                    <el-button v-if=\"rAgree\" type=\"primary\" class=\"loginBtn\" @click=\"register\">\r\n                        注册\r\n                    </el-button>\r\n                </el-form>\r\n            </el-tab-pane>\r\n        </el-tabs>\r\n    </div>\r\n</template> \r\n\r\n<script setup>\r\nimport { reactive, ref } from 'vue'\r\nimport { loginApi } from '../../axios/apis'\r\nimport { useRouter } from 'vue-router';\r\n//按需引入 useStore()方法\r\nimport { useStore } from 'vuex'\r\nimport { ElMessage } from 'element-plus'\r\n\r\n\r\nconst router = useRouter()\r\n\r\n// Vue3中store类似于Vue2中this.$store\r\n// useStore()方法创建store对象，相当于src/store/index.js中的store实例对象\r\nconst store = useStore()\r\n\r\n// 修改showLoginView的值\r\nconst handleClick = () => {\r\n    //触发mutation, 用于同步修改state的信息\r\n    store.commit('changeStyle', !store.state.showView)\r\n    store.commit('changeLogin', !store.state.showLogin)\r\n\r\n}\r\n\r\nconst login_Form = reactive({\r\n    username: '',\r\n    password: '',\r\n})\r\n\r\nconst loginRules = reactive({\r\n    username: [\r\n        { require: true, message: '请输入用户名', trigger: \"blur\" },\r\n        {\r\n            min: 2,\r\n            max: 8,\r\n            message: \"长度在 2到 8 个字符\",\r\n            trigger: \"blur\",\r\n        }],\r\n    password: [\r\n        { require: true, message: '请输入密码', trigger: \"blur\" },\r\n        {\r\n            min: 6,\r\n            max: 12,\r\n            message: \"长度在 6 到 12 个字符\",\r\n            trigger: \"blur\",\r\n        }]\r\n})\r\n\r\n//获取表单元素\r\nconst loginFormRef = ref()\r\n\r\n\r\n\r\n//登录按钮\r\nconst login = () => {\r\n    // console.log(loginFormRef);\r\n    // console.log(login_Form);\r\n    //预验证\r\n    loginFormRef.value.validate(async (valid) => {\r\n        // 根据预验证 判断是否发起请求\r\n        if (!valid) return;\r\n\r\n        const res = await loginApi(login_Form)\r\n        // console.log(res.data);\r\n        // console.log(res.meta);\r\n        if (res.meta.status !== 200) return ElMessage.error('登录失败！')\r\n\r\n        ElMessage({\r\n            message: '登录成功!',\r\n            type: 'success',\r\n        })\r\n        window.sessionStorage.setItem('token', res.data.token)\r\n        router.push('/home')\r\n    })\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\nbody {\r\n    position: relative;\r\n}\r\n\r\n#box {\r\n    z-index: 100;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    background-color: rgba(221, 221, 221, 0.5);\r\n    // auto——效果和没有定义pointer-events属性相同，鼠标不会穿透当前层。\r\n    pointer-events: auto;\r\n\r\n    .login_box {\r\n        position: absolute;\r\n        left: 50%;\r\n        top: 50%;\r\n        transform: translate(-50%, -50%);\r\n        width: 480px;\r\n        height: 600px;\r\n        border-radius: 20px;\r\n        box-shadow: 10px 5px 5px rgb(225, 219, 219);\r\n        background: #fff;\r\n\r\n\r\n        .login_button {\r\n            width: 300px;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n.title {\r\n    margin: 40px 0px 20px;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-left: 20px;\r\n    font-family: \"Microsoft YaHei\";\r\n\r\n}\r\n\r\n.type {\r\n    display: none;\r\n}\r\n\r\n.close_box {\r\n    width: 40px;\r\n    height: 40px;\r\n    position: absolute;\r\n    top: 15x;\r\n    right: -50px;\r\n    border-radius: 20px;\r\n    cursor: pointer;\r\n    background-color: rgb(227, 222, 222);\r\n    // 背景线性渐变\r\n    // background: linear-gradient(to bottom right, pink, yellow, violet, skyblue);\r\n\r\n\r\n    span {\r\n        font-size: 30px;\r\n        color: rgb(125, 127, 127);\r\n        margin-left: 13px;\r\n        line-height: 35px;\r\n    }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}