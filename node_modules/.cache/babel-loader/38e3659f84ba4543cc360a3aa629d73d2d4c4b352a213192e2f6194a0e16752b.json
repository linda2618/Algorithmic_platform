{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive, ref } from 'vue';\nimport { loginApi } from '../../axios/apis';\nimport { useRouter } from 'vue-router';\n//按需引入 useStore()方法\nimport { useStore } from 'vuex';\nexport default {\n  __name: 'index',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const router = useRouter();\n\n    // this.$store.state.info\n    // Vue3中store类似于Vue2中this.$store\n    // useStore()方法创建store对象，相当于src/store/index.js中的store实例对象\n    const store = useStore();\n\n    // 修改showLoginView的值\n    const handleClick = () => {\n      //触发mutation, 用于同步修改state的信息\n      store.commit('changeStyle', !store.state.showLoginView);\n    };\n    const login_Form = reactive({\n      username: 'admin',\n      password: '123456'\n    });\n    const loginRules = reactive({\n      username: [{\n        required: true,\n        message: \"请输入账号名\",\n        trigger: \"blur\"\n      }, {\n        min: 5,\n        max: 10,\n        message: \"长度在 65到 10 个字符\",\n        trigger: \"blur\"\n      }],\n      password: [{\n        required: true,\n        message: \"请输入密码\",\n        trigger: \"blur\"\n      }]\n    });\n\n    //获取表单元素\n    const loginFormRef = ref();\n\n    //登录/注册按钮\n    const login = () => {\n      // console.log(loginFormRef);\n      // console.log(login_Form);\n      //预验证\n      loginFormRef.value.validate(valid => {\n        // 根据预验证 判断是否发起请求\n        if (!valid) return;\n        loginApi(login_Form).then(res => {\n          // console.log(res.data);\n          window.sessionStorage.setItem('token', res.data.token);\n          router.push('/home');\n        });\n      });\n    };\n\n    // //是否显示登录/注册框\n    // const showLoginView = ref(false)\n    // //改变样式显示隐藏登录框\n    // const changeStyle = () => {\n    //     showLoginView.value = true\n    // }\n\n    const __returned__ = {\n      router,\n      store,\n      handleClick,\n      login_Form,\n      loginRules,\n      loginFormRef,\n      login,\n      reactive,\n      ref,\n      get loginApi() {\n        return loginApi;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get useStore() {\n        return useStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":";AA6BA,SAASA,QAAQ,EAAEC,GAAG,QAAQ,KAAK;AACnC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,SAAS,QAAQ,YAAY;AACtC;AACA,SAASC,QAAQ,QAAQ,MAAM;;;;;;;IAE/B,MAAMC,MAAM,GAAGF,SAAS,EAAE;;IAE1B;IACA;IACA;IACA,MAAMG,KAAK,GAAGF,QAAQ,EAAE;;IAExB;IACA,MAAMG,WAAW,GAAG,MAAM;MACtB;MACAD,KAAK,CAACE,MAAM,CAAC,aAAa,EAAE,CAACF,KAAK,CAACG,KAAK,CAACC,aAAa,CAAC;IAC3D,CAAC;IAED,MAAMC,UAAU,GAAGX,QAAQ,CAAC;MACxBY,QAAQ,EAAE,OAAO;MACjBC,QAAQ,EAAE;IACd,CAAC,CAAC;IAEF,MAAMC,UAAU,GAAGd,QAAQ,CAAC;MACxBY,QAAQ,EAAE,CACN;QAAEG,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAO,CAAC,EACtD;QACIC,GAAG,EAAE,CAAC;QACNC,GAAG,EAAE,EAAE;QACPH,OAAO,EAAE,gBAAgB;QACzBC,OAAO,EAAE;MACb,CAAC,CAAC;MACNJ,QAAQ,EAAE,CACN;QAAEE,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO,CAAC;IAC7D,CAAC,CAAC;;IAEF;IACA,MAAMG,YAAY,GAAGnB,GAAG,EAAE;;IAE1B;IACA,MAAMoB,KAAK,GAAG,MAAM;MAChB;MACA;MACA;MACAD,YAAY,CAACE,KAAK,CAACC,QAAQ,CAAEC,KAAK,IAAK;QACnC;QACA,IAAI,CAACA,KAAK,EAAE;QAEZtB,QAAQ,CAACS,UAAU,CAAC,CAACc,IAAI,CAACC,GAAG,IAAI;UAC7B;UACAC,MAAM,CAACC,cAAc,CAACC,OAAO,CAAC,OAAO,EAAEH,GAAG,CAACI,IAAI,CAACC,KAAK,CAAC;UACtD1B,MAAM,CAAC2B,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC;;IAED;IACA;IACA;IACA;IACA;IACA","names":["reactive","ref","loginApi","useRouter","useStore","router","store","handleClick","commit","state","showLoginView","login_Form","username","password","loginRules","required","message","trigger","min","max","loginFormRef","login","value","validate","valid","then","res","window","sessionStorage","setItem","data","token","push"],"sources":["D:/前端基础/22科技月评-算法在线刷题平台/algorithmic_platform/src/pages/Login/index.vue"],"sourcesContent":["<template>\r\n    <!-- vuex 页面中直接使用渲染时与vue2中的使用方法相同 -->\r\n    <div id=\"box\" :class=\"{ type: store.state.showLoginView }\">\r\n        <div class=\"login_box\">\r\n            <div class=\"close_box\" @click=\"handleClick\">\r\n                <span>x</span>\r\n            </div>\r\n            <div class=\"title\">\r\n                <h1>每日算法</h1>\r\n            </div>\r\n            <el-form ref=\"loginFormRef\" :model=\"login_Form\" status-icon :rules=\"loginRules\" label-width=\"100px\"\r\n                class=\"demo-ruleForm\">\r\n                <el-form-item label=\"账号名\" prop=\"username\" style=\"width:400px\">\r\n                    <el-input v-model=\"login_Form.username\" type=\"input\" size=\"large\" />\r\n                </el-form-item>\r\n                <el-form-item label=\"密码\" prop=\"password\" style=\"width:400px\">\r\n                    <el-input v-model=\"login_Form.password\" type=\"password\" autocomplete=\"off\" size=\"large\" />\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button class=\"login_button\" type=\"primary\" size=\"large\" @click=\"login\">登录/注册</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </div>\r\n\r\n\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref } from 'vue'\r\nimport { loginApi } from '../../axios/apis'\r\nimport { useRouter } from 'vue-router';\r\n//按需引入 useStore()方法\r\nimport { useStore } from 'vuex'\r\n\r\nconst router = useRouter()\r\n\r\n// this.$store.state.info\r\n// Vue3中store类似于Vue2中this.$store\r\n// useStore()方法创建store对象，相当于src/store/index.js中的store实例对象\r\nconst store = useStore()\r\n\r\n// 修改showLoginView的值\r\nconst handleClick = () => {\r\n    //触发mutation, 用于同步修改state的信息\r\n    store.commit('changeStyle', !store.state.showLoginView)\r\n}\r\n\r\nconst login_Form = reactive({\r\n    username: 'admin',\r\n    password: '123456'\r\n})\r\n\r\nconst loginRules = reactive({\r\n    username: [\r\n        { required: true, message: \"请输入账号名\", trigger: \"blur\" },\r\n        {\r\n            min: 5,\r\n            max: 10,\r\n            message: \"长度在 65到 10 个字符\",\r\n            trigger: \"blur\",\r\n        }],\r\n    password: [\r\n        { required: true, message: \"请输入密码\", trigger: \"blur\" },]\r\n})\r\n\r\n//获取表单元素\r\nconst loginFormRef = ref()\r\n\r\n//登录/注册按钮\r\nconst login = () => {\r\n    // console.log(loginFormRef);\r\n    // console.log(login_Form);\r\n    //预验证\r\n    loginFormRef.value.validate((valid) => {\r\n        // 根据预验证 判断是否发起请求\r\n        if (!valid) return;\r\n\r\n        loginApi(login_Form).then(res => {\r\n            // console.log(res.data);\r\n            window.sessionStorage.setItem('token', res.data.token)\r\n            router.push('/home')\r\n        })\r\n    })\r\n}\r\n\r\n// //是否显示登录/注册框\r\n// const showLoginView = ref(false)\r\n// //改变样式显示隐藏登录框\r\n// const changeStyle = () => {\r\n//     showLoginView.value = true\r\n// }\r\n\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\nbody {\r\n    position: relative;\r\n}\r\n\r\n#box {\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    background-color: rgba(221, 221, 221, 0.5);\r\n    pointer-events: none;\r\n}\r\n\r\n.login_box {\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 480px;\r\n    height: 500px;\r\n    border-radius: 20px;\r\n    box-shadow: 10px 5px 5px rgb(225, 219, 219);\r\n    background: #fff;\r\n    pointer-events: auto;\r\n\r\n\r\n    .login_button {\r\n        width: 300px;\r\n    }\r\n}\r\n\r\n.title {\r\n    margin: 40px 0px 20px;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-left: 20px;\r\n    font-family: \"Microsoft YaHei\";\r\n\r\n}\r\n\r\n.type {\r\n    display: none;\r\n}\r\n\r\n.close_box {\r\n    width: 40px;\r\n    height: 40px;\r\n    position: absolute;\r\n    top: 15x;\r\n    right: -50px;\r\n    border-radius: 20px;\r\n    cursor: pointer;\r\n    // 背景线性渐变\r\n    // background: linear-gradient(to bottom right, pink, yellow, violet, skyblue);\r\n\r\n\r\n    span {\r\n        font-size: 30px;\r\n        color: rgb(125, 127, 127);\r\n        margin-left: 13px;\r\n        line-height: 40px;\r\n    }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}