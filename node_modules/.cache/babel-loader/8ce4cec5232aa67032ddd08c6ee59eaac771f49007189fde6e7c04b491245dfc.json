{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_el_card, null, {\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      ref: \"QuestionDetailRef\",\n      \"label-position\": $setup.labelPosition,\n      \"label-width\": \"100px\",\n      model: $setup.QuestionDetail,\n      rules: $setup.QuestionDetailRules,\n      style: {\n        \"max-width\": \"800px\"\n      },\n      size: $setup.size\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        prop: \"title\",\n        label: \"题目\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.QuestionDetail.title,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.QuestionDetail.title = $event),\n          type: \"textarea\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        prop: \"description\",\n        label: \"题目描述\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.QuestionDetail.description,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.QuestionDetail.description = $event),\n          type: \"textarea\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        prop: \"degree\",\n        label: \"难度等级\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.QuestionDetail.degree,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.QuestionDetail.degree = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        prop: \"submit\",\n        label: \"提交次数\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.QuestionDetail.submit,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.QuestionDetail.submit = $event),\n          disabled: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        prop: \"pass\",\n        label: \"通过次数\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.QuestionDetail.pass,\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.QuestionDetail.pass = $event),\n          disabled: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"状态\",\n        prop: \"state\"\n      }, {\n        default: _withCtx(() => [$setup.QuestionDetail.state === true ? (_openBlock(), _createBlock(_component_el_tag, {\n          key: 0,\n          class: \"ml-2\",\n          type: \"success\",\n          size: \"large\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\" 已发布 \")]),\n          _: 1 /* STABLE */\n        })) : _createCommentVNode(\"v-if\", true), $setup.QuestionDetail.state === false ? (_openBlock(), _createBlock(_component_el_tag, {\n          key: 1,\n          class: \"ml-2\",\n          type: \"\",\n          size: \"large\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\" 待发布 \")]),\n          _: 1 /* STABLE */\n        })) : _createCommentVNode(\"v-if\", true)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"详情图片\",\n        prop: \"is_promote\"\n      }, {\n        default: _withCtx(() => [_createCommentVNode(\" action 表示图片要上传到后台API 地址 \"), _createCommentVNode(\" <el-upload class=\\\"avatar-uploader\\\"\\r\\n                        action=\\\"https://run.mocky.io/v3/9d059bf9-4660-45f2-925d-ce80ad6c4d15\\\" :show-file-list=\\\"false\\\"\\r\\n                        :on-success=\\\"handleAvatarSuccess\\\" :before-upload=\\\"beforeAvatarUpload\\\">\\r\\n                        <img v-if=\\\"imageUrl\\\" :src=\\\"imageUrl\\\" />\\r\\n                        <el-icon v-else class=\\\"avatar-uploader-icon\\\">\\r\\n                            <Plus />\\r\\n                        </el-icon>\\r\\n                    </el-upload> \")]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"label-position\", \"model\", \"rules\", \"size\"]), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $setup.editInfo,\n      size: \"large\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\" 确定 \")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_button, {\n      type: \"info\",\n      onClick: _cache[5] || (_cache[5] = $event => $setup.resetForm($setup.QuestionDetailRef)),\n      size: \"large\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"取消\")]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"mappings":";;;;;;;;uBACIA,oBA0CM,cAzCFC,aAwCUC;sBAvCN,MAmCU,CAnCVD,aAmCUE;MAnCDC,GAAG,EAAC,mBAAmB;MAAE,gBAAc,EAAEC,oBAAa;MAAE,aAAW,EAAC,OAAO;MAAEC,KAAK,EAAED,qBAAc;MACtGE,KAAK,EAAEF,0BAAmB;MAAEG,KAAwB,EAAxB;QAAA;MAAA,CAAwB;MAAEC,IAAI,EAAEJ;;wBAC7D,MAEe,CAFfJ,aAEeS;QAFDC,IAAI,EAAC,OAAO;QAACC,KAAK,EAAC;;0BAC7B,MAA2D,CAA3DX,aAA2DY;sBAAxCR,qBAAc,CAACS,KAAK;qEAApBT,qBAAc,CAACS,KAAK;UAAEC,IAAI,EAAC;;;UAElDd,aAEeS;QAFDC,IAAI,EAAC,aAAa;QAACC,KAAK,EAAC;;0BACnC,MAAiE,CAAjEX,aAAiEY;sBAA9CR,qBAAc,CAACW,WAAW;qEAA1BX,qBAAc,CAACW,WAAW;UAAED,IAAI,EAAC;;;UAExDd,aAEeS;QAFDC,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAC;;0BAC9B,MAA4C,CAA5CX,aAA4CY;sBAAzBR,qBAAc,CAACY,MAAM;qEAArBZ,qBAAc,CAACY,MAAM;;;UAE5ChB,aAEeS;QAFDC,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAC;;0BAC9B,MAAqD,CAArDX,aAAqDY;sBAAlCR,qBAAc,CAACa,MAAM;qEAArBb,qBAAc,CAACa,MAAM;UAAEC,QAAQ,EAAR;;;UAE9ClB,aAEeS;QAFDC,IAAI,EAAC,MAAM;QAACC,KAAK,EAAC;;0BAC5B,MAAmD,CAAnDX,aAAmDY;sBAAhCR,qBAAc,CAACe,IAAI;qEAAnBf,qBAAc,CAACe,IAAI;UAAED,QAAQ,EAAR;;;UAE5ClB,aAKeS;QALDE,KAAK,EAAC,IAAI;QAACD,IAAI,EAAC;;0BAC1B,MACS,CADkBN,qBAAc,CAACgB,KAAK,2BAA/CC,aACSC;;UADDC,KAAK,EAAC,MAAM;UAAsCT,IAAI,EAAC,SAAS;UAACN,IAAI,EAAC;;4BAAQ,MACtF,kBADsF,OACtF;;iDAC2BJ,qBAAc,CAACgB,KAAK,4BAA/CC,aACSC;;UADDC,KAAK,EAAC,MAAM;UAAuCT,IAAI,EAAC,EAAE;UAACN,IAAI,EAAC;;4BAAQ,MAChF,kBADgF,OAChF;;;;UAEJR,aAWeS;QAXDE,KAAK,EAAC,MAAM;QAACD,IAAI,EAAC;;0BAE5B,MAAgC,CAAhCc,gDAAgC,EAChCA,oiBAOgB;;;;;qEAGxBxB,aAAyEyB;MAA9DX,IAAI,EAAC,SAAS;MAAEY,OAAK,EAAEtB,eAAQ;MAAEI,IAAI,EAAC;;wBAAQ,MAAI,kBAAJ,MAAI;;QAC7DR,aAAwFyB;MAA7EX,IAAI,EAAC,MAAM;MAAEY,OAAK,sCAAEtB,gBAAS,CAACA,wBAAiB;MAAGI,IAAI,EAAC;;wBAAQ,MAAE,kBAAF,IAAE","names":["_createElementBlock","_createVNode","_component_el_card","_component_el_form","ref","$setup","model","rules","style","size","_component_el_form_item","prop","label","_component_el_input","title","type","description","degree","submit","disabled","pass","state","_createBlock","_component_el_tag","class","_createCommentVNode","_component_el_button","onClick"],"sourceRoot":"","sources":["D:\\前端基础\\22科技月评-算法在线刷题平台\\algorithmic_platform\\src\\components\\Question\\Update.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-card>\r\n            <el-form ref=\"QuestionDetailRef\" :label-position=\"labelPosition\" label-width=\"100px\" :model=\"QuestionDetail\"\r\n                :rules=\"QuestionDetailRules\" style=\"max-width: 800px\" :size=\"size\">\r\n                <el-form-item prop=\"title\" label=\"题目\">\r\n                    <el-input v-model=\"QuestionDetail.title\" type=\"textarea\" />\r\n                </el-form-item>\r\n                <el-form-item prop=\"description\" label=\"题目描述\">\r\n                    <el-input v-model=\"QuestionDetail.description\" type=\"textarea\" />\r\n                </el-form-item>\r\n                <el-form-item prop=\"degree\" label=\"难度等级\">\r\n                    <el-input v-model=\"QuestionDetail.degree\" />\r\n                </el-form-item>\r\n                <el-form-item prop=\"submit\" label=\"提交次数\">\r\n                    <el-input v-model=\"QuestionDetail.submit\" disabled />\r\n                </el-form-item>\r\n                <el-form-item prop=\"pass\" label=\"通过次数\">\r\n                    <el-input v-model=\"QuestionDetail.pass\" disabled />\r\n                </el-form-item>\r\n                <el-form-item label=\"状态\" prop=\"state\">\r\n                    <el-tag class=\"ml-2\" v-if=\"QuestionDetail.state === true\" type=\"success\" size=\"large\"> 已发布\r\n                    </el-tag>\r\n                    <el-tag class=\"ml-2\" v-if=\"QuestionDetail.state === false\" type=\"\" size=\"large\"> 待发布\r\n                    </el-tag>\r\n                </el-form-item>\r\n                <el-form-item label=\"详情图片\" prop=\"is_promote\">\r\n\r\n                    <!-- action 表示图片要上传到后台API 地址 -->\r\n                    <!-- <el-upload class=\"avatar-uploader\"\r\n                        action=\"https://run.mocky.io/v3/9d059bf9-4660-45f2-925d-ce80ad6c4d15\" :show-file-list=\"false\"\r\n                        :on-success=\"handleAvatarSuccess\" :before-upload=\"beforeAvatarUpload\">\r\n                        <img v-if=\"imageUrl\" :src=\"imageUrl\" />\r\n                        <el-icon v-else class=\"avatar-uploader-icon\">\r\n                            <Plus />\r\n                        </el-icon>\r\n                    </el-upload> -->\r\n                </el-form-item>\r\n            </el-form>\r\n            <el-button type=\"primary\" @click=\"editInfo\" size=\"large\"> 确定 </el-button>\r\n            <el-button type=\"info\" @click=\"resetForm(QuestionDetailRef)\" size=\"large\">取消</el-button>\r\n\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, ref, reactive } from 'vue'\r\nimport { useRoute } from 'vue-router'\r\nimport { getQuestionListById, changeQuestionState } from '@/axios/apis.js'\r\nimport { ElMessage } from \"element-plus\";\r\n\r\nimport { Plus } from '@element-plus/icons-vue'\r\n\r\nconst route = useRoute()\r\n\r\n//接收跳转携带过来的参数Id\r\nlet _id = route.query._id;\r\n\r\n// //上传图片\r\n// const imageUrl = ref('')\r\n// // const uploadUrl = ref(baseurl + '/api/common/upload')\r\n// const beforeAvatarUpload = (rawFile) => {\r\n//     if (rawFile.type !== 'image/jpeg') {\r\n//         ElMessage.error('图片必须是JPG格式!')\r\n//         return false\r\n//     } else if (rawFile.size / 1024 / 1024 > 2) {\r\n//         ElMessage.error('图片大小不能超过2MB!')\r\n//         return false\r\n//     }\r\n//     return true\r\n// }\r\nconst handleAvatarSuccess = (res) => {\r\n\r\n}\r\n\r\nconst QuestionDetail = ref({})\r\nconst QuestionDetailRef = ref()\r\n\r\nconst QuestionDetailRules = reactive({\r\n    title: [\r\n        { required: true, message: \"请输入题目\", trigger: \"blur\" },\r\n    ],\r\n    description: [\r\n        { required: true, message: \"请输入描述\", trigger: \"blur\" },\r\n    ],\r\n    degree: [\r\n        { required: true, message: \"请输入难度\", trigger: \"blur\" },\r\n    ],\r\n});\r\n\r\nconst labelPosition = ref('left')\r\nconst size = ref('large')\r\n\r\n\r\nonMounted(() => {\r\n    getQuestionListByIdView()\r\n})\r\n\r\n\r\nconst getQuestionListByIdView = async () => {\r\n    const res = await getQuestionListById(_id)\r\n    // console.log(res);\r\n    if (res.status !== 200) {\r\n        return ElMessage.error(\"获取此题目数据失败\");\r\n    }\r\n    QuestionDetail.value = res.data\r\n}\r\n\r\n//取消按钮\r\nconst resetForm = () => {\r\n    // QuestionDetailRef.value.resetFields()\r\n    getQuestionListByIdView()\r\n}\r\n\r\n//确定按钮\r\nconst editInfo = async () => {\r\n    // console.log(QuestionDetail.value);\r\n    const res = await changeQuestionState(QuestionDetail.value)\r\n    console.log(res);\r\n}\r\n\r\n\r\n\r\n///////////////////////////////\r\n// var checkPrice = (rule, value, cb) => {\r\n//     //验证价格的正则表达式\r\n//     let regPrice = /^[1-9]\\d*|0$/\r\n//     if (regPrice.test(value)) {\r\n//         cb();\r\n//     } else {\r\n//         cb(new Error(\"价格是不小于0的整数\"));\r\n//     }\r\n// }\r\n\r\n// var checkNumber = (rule, value, cb) => {\r\n//     //验证价格的正则表达式\r\n//     let regNumber = /^[1-9]\\d*|0$/\r\n//     if (regNumber.test(value)) {\r\n//         cb();\r\n//     } else {\r\n//         cb(new Error(\"数量是不小于0的整数\"));\r\n//     }\r\n// }\r\n// var checkWeight = (rule, value, cb) => {\r\n//     //验证价格的正则表达式\r\n//     let regWeight = /^[1-9]\\d*|0$/\r\n//     if (regWeight.test(value)) {\r\n//         cb();\r\n//     } else {\r\n//         cb(new Error(\"重量是不小于0的整数\"));\r\n//     }\r\n// }\r\n// const QuestionDetailRules = reactive({\r\n//     goods_price: [\r\n//         { required: true, message: \"请输入价格\", trigger: \"blur\" },\r\n//         { validator: checkPrice, trigger: \"blur\" },\r\n//     ],\r\n//     goods_number: [\r\n//         { required: true, message: \"请输入数量\", trigger: \"blur\" },\r\n//         { validator: checkNumber, trigger: \"blur\" },\r\n\r\n//     ],\r\n//     goods_weight: [\r\n//         { required: true, message: \"请输入重量\", trigger: \"blur\" },\r\n//         { validator: checkWeight, trigger: \"blur\" },\r\n//     ],\r\n// });\r\n\r\n\r\n</script>\r\n\r\n<style  lang=\"less\" scoped>\r\n.avatar-uploader .avatar {\r\n    width: 178px;\r\n    height: 178px;\r\n    display: block;\r\n}\r\n\r\n.avatar-uploader .el-upload {\r\n    border: 1px dashed var(--el-border-color);\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    position: relative;\r\n    overflow: hidden;\r\n    transition: var(--el-transition-duration-fast);\r\n}\r\n\r\n.avatar-uploader .el-upload:hover {\r\n    border-color: var(--el-color-primary);\r\n}\r\n\r\n.el-icon.avatar-uploader-icon {\r\n    font-size: 28px;\r\n    color: #8c939d;\r\n    width: 178px;\r\n    height: 178px;\r\n    text-align: center;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}