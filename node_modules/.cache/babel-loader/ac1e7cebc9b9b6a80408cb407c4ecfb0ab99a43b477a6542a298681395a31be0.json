{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-c10df12c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"addQues\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, null, {\n    default: _withCtx(() => [_createVNode(_component_el_tag, {\n      class: \"header-title\",\n      size: \"large\",\n      type: \"primary\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"添加题目\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form, {\n      ref: \"QuestionDetailRef\",\n      \"label-position\": $setup.labelPosition,\n      \"label-width\": \"150px\",\n      model: $setup.QuestionDetail,\n      rules: $setup.QuestionDetailRules,\n      style: {\n        \"max-width\": \"800px\"\n      },\n      size: $setup.size\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        prop: \"title\",\n        label: \"题目\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.QuestionDetail.title,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.QuestionDetail.title = $event),\n          type: \"textarea\",\n          rows: 3,\n          clearable: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        prop: \"description\",\n        label: \"题目描述\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.QuestionDetail.description,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.QuestionDetail.description = $event),\n          type: \"textarea\",\n          rows: 13,\n          clearable: \"\",\n          class: \"description\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        prop: \"degree\",\n        label: \"难度等级\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.QuestionDetail.degree,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.QuestionDetail.degree = $event),\n          clearable: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        prop: \"submit\",\n        label: \"提交次数\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.QuestionDetail.submit,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.QuestionDetail.submit = $event),\n          disabled: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        prop: \"pass\",\n        label: \"通过次数\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.QuestionDetail.pass,\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.QuestionDetail.pass = $event),\n          disabled: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"状态\",\n        prop: \"state\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.QuestionDetail.state,\n          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.QuestionDetail.state = $event),\n          size: \"small\",\n          placeholder: \"\\r\\n                    题目是否发布(true/false)\",\n          style: {\n            \"height\": \"30px\"\n          }\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"详情图片\",\n        prop: \"is_promote\"\n      }, {\n        default: _withCtx(() => [_createCommentVNode(\" action 表示图片要上传到后台API 地址 \"), _createCommentVNode(\" <el-upload class=\\\"avatar-uploader\\\"\\r\\n                        action=\\\"https://run.mocky.io/v3/9d059bf9-4660-45f2-925d-ce80ad6c4d15\\\" :show-file-list=\\\"false\\\"\\r\\n                        :on-success=\\\"handleAvatarSuccess\\\" :before-upload=\\\"beforeAvatarUpload\\\">\\r\\n                        <img v-if=\\\"imageUrl\\\" :src=\\\"imageUrl\\\" />\\r\\n                        <el-icon v-else class=\\\"avatar-uploader-icon\\\">\\r\\n                            <Plus />   \\r\\n                        </el-icon>\\r\\n                    </el-upload> \")]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"label-position\", \"model\", \"rules\", \"size\"]), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $setup.AddQuestion,\n      size: \"large\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\" 确定 \")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_button, {\n      type: \"info\",\n      onClick: $setup.resetForm,\n      size: \"large\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"取消\")]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"mappings":";;;EACSA,KAAK,EAAC;AAAS;;;;;;;;uBAApBC,oBAyCM,OAzCNC,UAyCM,GAxCFC,aAuCUC;sBAtCN,MAAsE,CAAtED,aAAsEE;MAA9DL,KAAK,EAAC,cAAc;MAACM,IAAI,EAAC,OAAO;MAACC,IAAI,EAAC;;wBAAU,MAAI,kBAAJ,MAAI;;QAE7DJ,aAiCUK;MAjCDC,GAAG,EAAC,mBAAmB;MAAE,gBAAc,EAAEC,oBAAa;MAAE,aAAW,EAAC,OAAO;MAAEC,KAAK,EAAED,qBAAc;MACtGE,KAAK,EAAEF,0BAAmB;MAAEG,KAAwB,EAAxB;QAAA;MAAA,CAAwB;MAAEP,IAAI,EAAEI;;wBAC7D,MAEe,CAFfP,aAEeW;QAFDC,IAAI,EAAC,OAAO;QAACC,KAAK,EAAC;;0BAC7B,MAA+E,CAA/Eb,aAA+Ec;sBAA5DP,qBAAc,CAACQ,KAAK;qEAApBR,qBAAc,CAACQ,KAAK;UAAEX,IAAI,EAAC,UAAU;UAAEY,IAAI,EAAE,CAAC;UAAEC,SAAS,EAAT;;;UAEvEjB,aAGeW;QAHDC,IAAI,EAAC,aAAa;QAACC,KAAK,EAAC;;0BACnC,MAC0B,CAD1Bb,aAC0Bc;sBADPP,qBAAc,CAACW,WAAW;qEAA1BX,qBAAc,CAACW,WAAW;UAAEd,IAAI,EAAC,UAAU;UAAEY,IAAI,EAAE,EAAE;UAAEC,SAAS,EAAT,EAAS;UAC/EpB,KAAK,EAAC;;;UAEdG,aAEeW;QAFDC,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAC;;0BAC9B,MAAsD,CAAtDb,aAAsDc;sBAAnCP,qBAAc,CAACY,MAAM;qEAArBZ,qBAAc,CAACY,MAAM;UAAEF,SAAS,EAAT;;;UAE9CjB,aAEeW;QAFDC,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAC;;0BAC9B,MAAqD,CAArDb,aAAqDc;sBAAlCP,qBAAc,CAACa,MAAM;qEAArBb,qBAAc,CAACa,MAAM;UAAEC,QAAQ,EAAR;;;UAE9CrB,aAEeW;QAFDC,IAAI,EAAC,MAAM;QAACC,KAAK,EAAC;;0BAC5B,MAAmD,CAAnDb,aAAmDc;sBAAhCP,qBAAc,CAACe,IAAI;qEAAnBf,qBAAc,CAACe,IAAI;UAAED,QAAQ,EAAR;;;UAE5CrB,aAGeW;QAHDE,KAAK,EAAC,IAAI;QAACD,IAAI,EAAC;;0BAC1B,MAC4C,CAD5CZ,aAC4Cc;sBADzBP,qBAAc,CAACgB,KAAK;qEAApBhB,qBAAc,CAACgB,KAAK;UAAEpB,IAAI,EAAC,OAAO;UAACqB,WAAW,EAAC,4CAC/C;UAACd,KAAqB,EAArB;YAAA;UAAA;;;UAExBV,aAUeW;QAVDE,KAAK,EAAC,MAAM;QAACD,IAAI,EAAC;;0BAC5B,MAAgC,CAAhCa,gDAAgC,EAChCA,uiBAOgB;;;;;qEAGxBzB,aAA4E0B;MAAjEtB,IAAI,EAAC,SAAS;MAAEuB,OAAK,EAAEpB,kBAAW;MAAEJ,IAAI,EAAC;;wBAAQ,MAAI,kBAAJ,MAAI;;QAChEH,aAAqE0B;MAA1DtB,IAAI,EAAC,MAAM;MAAEuB,OAAK,EAAEpB,gBAAS;MAAEJ,IAAI,EAAC;;wBAAQ,MAAE,kBAAF,IAAE","names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","_component_el_tag","size","type","_component_el_form","ref","$setup","model","rules","style","_component_el_form_item","prop","label","_component_el_input","title","rows","clearable","description","degree","submit","disabled","pass","state","placeholder","_createCommentVNode","_component_el_button","onClick"],"sourceRoot":"","sources":["D:\\前端基础\\22科技月评-算法在线刷题平台\\algorithmic_platform\\src\\components\\AddQuestion\\index.vue"],"sourcesContent":["<template>\r\n    <div class=\"addQues\">\r\n        <el-card>\r\n            <el-tag class=\"header-title\" size=\"large\" type=\"primary\">添加题目</el-tag>\r\n\r\n            <el-form ref=\"QuestionDetailRef\" :label-position=\"labelPosition\" label-width=\"150px\" :model=\"QuestionDetail\"\r\n                :rules=\"QuestionDetailRules\" style=\"max-width: 800px\" :size=\"size\">\r\n                <el-form-item prop=\"title\" label=\"题目\">\r\n                    <el-input v-model=\"QuestionDetail.title\" type=\"textarea\" :rows=\"3\" clearable />\r\n                </el-form-item>\r\n                <el-form-item prop=\"description\" label=\"题目描述\">\r\n                    <el-input v-model=\"QuestionDetail.description\" type=\"textarea\" :rows=\"13\" clearable\r\n                        class=\"description\" />\r\n                </el-form-item>\r\n                <el-form-item prop=\"degree\" label=\"难度等级\">\r\n                    <el-input v-model=\"QuestionDetail.degree\" clearable />\r\n                </el-form-item>\r\n                <el-form-item prop=\"submit\" label=\"提交次数\">\r\n                    <el-input v-model=\"QuestionDetail.submit\" disabled />\r\n                </el-form-item>\r\n                <el-form-item prop=\"pass\" label=\"通过次数\">\r\n                    <el-input v-model=\"QuestionDetail.pass\" disabled />\r\n                </el-form-item>\r\n                <el-form-item label=\"状态\" prop=\"state\">\r\n                    <el-input v-model=\"QuestionDetail.state\" size=\"small\" placeholder=\"\r\n                    题目是否发布(true/false)\" style=\"height: 30px;\" />\r\n                </el-form-item>\r\n                <el-form-item label=\"详情图片\" prop=\"is_promote\">\r\n                    <!-- action 表示图片要上传到后台API 地址 -->\r\n                    <!-- <el-upload class=\"avatar-uploader\"\r\n                        action=\"https://run.mocky.io/v3/9d059bf9-4660-45f2-925d-ce80ad6c4d15\" :show-file-list=\"false\"\r\n                        :on-success=\"handleAvatarSuccess\" :before-upload=\"beforeAvatarUpload\">\r\n                        <img v-if=\"imageUrl\" :src=\"imageUrl\" />\r\n                        <el-icon v-else class=\"avatar-uploader-icon\">\r\n                            <Plus />   \r\n                        </el-icon>\r\n                    </el-upload> -->\r\n                </el-form-item>\r\n            </el-form>\r\n            <el-button type=\"primary\" @click=\"AddQuestion\" size=\"large\"> 确定 </el-button>\r\n            <el-button type=\"info\" @click=\"resetForm\" size=\"large\">取消</el-button>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive } from 'vue'\r\nimport { AddOneQuestion } from '@/axios/apis.js'\r\nimport { ElMessage } from \"element-plus\";\r\n\r\n\r\n\r\nconst QuestionDetail = ref({})\r\nconst QuestionDetailRef = ref()\r\n\r\nconst QuestionDetailRules = reactive({\r\n    title: [\r\n        { required: true, message: \"请输入题目\", trigger: \"blur\" },\r\n    ],\r\n    description: [\r\n        { required: true, message: \"请输入描述\", trigger: \"blur\" },\r\n    ],\r\n    degree: [\r\n        { required: true, message: \"请输入难度\", trigger: \"blur\" },\r\n    ],\r\n});\r\nconst labelPosition = ref('left')\r\nconst size = ref('large')\r\n\r\n//取消按钮\r\nconst resetForm = () => {\r\n    QuestionDetailRef.value.resetFields()\r\n}\r\n\r\n//确定按钮\r\nconst AddQuestion = async () => {\r\n    const res = await AddOneQuestion(QuestionDetail.value)\r\n    ElMessage({\r\n        type: \"success\",\r\n        message: res.message,\r\n    });\r\n    QuestionDetailRef.value.resetFields()\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style  lang=\"less\" scoped>\r\n.addQues {\r\n\r\n    :deep(.el-textarea__inner) {\r\n        font-size: 20px;\r\n    }\r\n\r\n    :deep(.el-form-item__label) {\r\n        font-size: 20px;\r\n    }\r\n\r\n    :deep(.el-input__inner) {\r\n        height: 50px;\r\n        font-size: 18px;\r\n    }\r\n\r\n    :deep(.el-form-item) {\r\n        font-style: 20px;\r\n    }\r\n}\r\n\r\n.header-title {\r\n    font-size: 18px;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.description {\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}