{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock, normalizeClass as _normalizeClass, Fragment as _Fragment, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2ddd9490\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"login_box\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"x\", -1 /* HOISTED */));\nconst _hoisted_3 = [_hoisted_2];\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"title\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"每日算法\")], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_checkbox = _resolveComponent(\"el-checkbox\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n  const _component_el_tabs = _resolveComponent(\"el-tabs\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" vuex 页面中直接使用渲染时与vue2中的使用方法相同  \"), _createElementVNode(\"div\", {\n    id: \"box\",\n    class: _normalizeClass({\n      type: _ctx.store.state.showView\n    })\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"close_box\",\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.handleClick && _ctx.handleClick(...args))\n  }, _hoisted_3), _hoisted_4, _createVNode(_component_el_tabs, {\n    type: \"card\",\n    class: \"demo-tabs\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_tab_pane, {\n      label: \"登录\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form, {\n        ref: \"loginFormRef\",\n        model: _ctx.login_Form,\n        \"status-icon\": \"\",\n        rules: _ctx.loginRules,\n        \"label-width\": \"100px\",\n        class: \"demo-ruleForm\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_form_item, {\n          label: \"账号名\",\n          prop: \"username\",\n          style: {\n            \"width\": \"400px\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: _ctx.login_Form.username,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.login_Form.username = $event),\n            type: \"input\",\n            size: \"large\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, {\n          label: \"密码\",\n          prop: \"password\",\n          style: {\n            \"width\": \"400px\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: _ctx.login_Form.password,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.login_Form.password = $event),\n            type: \"password\",\n            autocomplete: \"off\",\n            size: \"large\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, {\n          style: {\n            \"width\": \"400px\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_checkbox, {\n            class: \"checkBox\",\n            modelValue: _ctx.isAgree,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.isAgree = $event),\n            label: \"同意用户使用准则\",\n            name: \"type\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, {\n          style: {\n            \"width\": \"400px\"\n          }\n        }, {\n          default: _withCtx(() => [_ctx.isAgree ? (_openBlock(), _createBlock(_component_el_button, {\n            key: 0,\n            class: \"login_button\",\n            type: \"primary\",\n            plain: \"\",\n            size: \"large\",\n            onClick: _ctx.login\n          }, {\n            default: _withCtx(() => [_createTextVNode(\" 登录 \")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\", \"rules\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_tab_pane, {\n      label: \"注册\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form, {\n        ref: \"loginFormRef\",\n        model: _ctx.login_Form,\n        \"status-icon\": \"\",\n        rules: _ctx.loginRules,\n        \"label-width\": \"100px\",\n        class: \"demo-ruleForm\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_form_item, {\n          label: \"账号名\",\n          prop: \"username\",\n          style: {\n            \"width\": \"400px\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: _ctx.login_Form.username,\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.login_Form.username = $event),\n            type: \"input\",\n            size: \"large\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, {\n          label: \"密码\",\n          prop: \"password\",\n          style: {\n            \"width\": \"400px\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: _ctx.login_Form.password,\n            \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.login_Form.password = $event),\n            type: \"password\",\n            autocomplete: \"off\",\n            size: \"large\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, {\n          label: \"密码\",\n          prop: \"rePassword\",\n          style: {\n            \"width\": \"400px\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: _ctx.login_Form.rePassword,\n            \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.login_Form.rePassword = $event),\n            type: \"password\",\n            autocomplete: \"off\",\n            size: \"large\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, {\n          style: {\n            \"width\": \"400px\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_checkbox, {\n            class: \"checkBox\",\n            modelValue: _ctx.rAgree,\n            \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => _ctx.rAgree = $event),\n            label: \"同意用户使用准则\",\n            name: \"type\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, {\n          style: {\n            \"width\": \"400px\"\n          }\n        }, {\n          default: _withCtx(() => [_ctx.rAgree ? (_openBlock(), _createBlock(_component_el_button, {\n            key: 0,\n            type: \"primary\",\n            class: \"login_button\",\n            onClick: _ctx.register\n          }, {\n            default: _withCtx(() => [_createTextVNode(\" 注册 \")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\", \"rules\"])]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })])], 2 /* CLASS */)], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","_hoisted_2","_createCommentVNode","id","type","_ctx","state","showView","_hoisted_1","onClick","_hoisted_4","_createVNode","_component_el_tabs","_component_el_tab_pane","label","_component_el_form","ref","model","rules","_component_el_form_item","prop","style","_component_el_input","username","size","password","autocomplete","_component_el_checkbox","name","_createBlock","_component_el_button","plain","rePassword"],"sourceRoot":"","sources":["D:\\前端基础\\22科技月评-算法在线刷题平台\\algorithmic_platform\\src\\pages\\Login\\index.vue"],"sourcesContent":["<!-- <style scoped >\r\n#box {\r\n    z-index: 100;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    background-color: rgba(221, 221, 221, 0.5);\r\n     /* auto——效果和没有定义pointer-events属性相同，鼠标不会穿透当前层。 */\r\n    pointer-events: auto;\r\n}\r\n\r\n.loginBtn {\r\n    width: 100px;\r\n}\r\n\r\n.loginForm {\r\n    text-align: center;\r\n}\r\n\r\n.checkBox {\r\n    margin-left: 7px;\r\n}\r\n\r\n.inpWidth {\r\n    width: 165px;\r\n}\r\n</style> -->\r\n\r\n\r\n\r\n<template>\r\n    <!-- vuex 页面中直接使用渲染时与vue2中的使用方法相同  -->\r\n    <div id=\"box\" :class=\"{ type: store.state.showView }\">\r\n        <div class=\"login_box\">\r\n            <div class=\"close_box\" @click=\"handleClick\">\r\n                <span>x</span>\r\n            </div>\r\n            <div class=\"title\">\r\n                <h1>每日算法</h1>\r\n            </div>\r\n            <el-tabs type=\"card\" class=\"demo-tabs\">\r\n                <el-tab-pane label=\"登录\">\r\n                    <el-form ref=\"loginFormRef\" :model=\"login_Form\" status-icon :rules=\"loginRules\" label-width=\"100px\"\r\n                        class=\"demo-ruleForm\">\r\n                        <el-form-item label=\"账号名\" prop=\"username\" style=\"width:400px\">\r\n                            <el-input v-model=\"login_Form.username\" type=\"input\" size=\"large\" />\r\n                        </el-form-item>\r\n                        <el-form-item label=\"密码\" prop=\"password\" style=\"width:400px\">\r\n                            <el-input v-model=\"login_Form.password\" type=\"password\" autocomplete=\"off\" size=\"large\" />\r\n                        </el-form-item>\r\n                        <el-form-item style=\"width:400px\">\r\n                            <el-checkbox class=\"checkBox\" v-model=\"isAgree\" label=\"同意用户使用准则\" name=\"type\" />\r\n                        </el-form-item>\r\n                        <el-form-item style=\"width:400px\">\r\n                            <el-button v-if=\"isAgree\" class=\"login_button\" type=\"primary\" plain size=\"large\"\r\n                                @click=\"login\">\r\n                                登录\r\n                            </el-button>\r\n                        </el-form-item>\r\n                    </el-form>\r\n                </el-tab-pane>\r\n\r\n                <el-tab-pane label=\"注册\">\r\n                    <el-form ref=\"loginFormRef\" :model=\"login_Form\" status-icon :rules=\"loginRules\" label-width=\"100px\"\r\n                        class=\"demo-ruleForm\">\r\n                        <el-form-item label=\"账号名\" prop=\"username\" style=\"width:400px\">\r\n                            <el-input v-model=\"login_Form.username\" type=\"input\" size=\"large\" />\r\n                        </el-form-item>\r\n                        <el-form-item label=\"密码\" prop=\"password\" style=\"width:400px\">\r\n                            <el-input v-model=\"login_Form.password\" type=\"password\" autocomplete=\"off\" size=\"large\" />\r\n                        </el-form-item>\r\n                        <el-form-item label=\"密码\" prop=\"rePassword\" style=\"width:400px\">\r\n                            <el-input v-model=\"login_Form.rePassword\" type=\"password\" autocomplete=\"off\" size=\"large\" />\r\n                        </el-form-item>\r\n                        <el-form-item style=\"width:400px\">\r\n                            <el-checkbox class=\"checkBox\" v-model=\"rAgree\" label=\"同意用户使用准则\" name=\"type\" />\r\n                        </el-form-item>\r\n                        <el-form-item style=\"width:400px\">\r\n                            <el-button v-if=\"rAgree\" type=\"primary\" class=\"login_button\" @click=\"register\">\r\n                                注册\r\n                            </el-button>\r\n                        </el-form-item>\r\n                    </el-form>\r\n                </el-tab-pane>\r\n            </el-tabs>\r\n        </div>\r\n\r\n    </div>\r\n</template> \r\n\r\n<script setup>\r\nimport { reactive, ref } from 'vue'\r\nimport { loginApi } from '../../axios/apis'\r\nimport { useRouter } from 'vue-router';\r\n//按需引入 useStore()方法\r\nimport { useStore } from 'vuex'\r\nimport { ElMessage } from 'element-plus'\r\n\r\n\r\nconst router = useRouter()\r\n\r\n// Vue3中store类似于Vue2中this.$store\r\n// useStore()方法创建store对象，相当于src/store/index.js中的store实例对象\r\nconst store = useStore()\r\n\r\n// 修改showLoginView的值\r\nconst handleClick = () => {\r\n    //触发mutation, 用于同步修改state的信息\r\n    store.commit('changeStyle', !store.state.showLoginView)\r\n}\r\n\r\nconst login_Form = reactive({\r\n    username: '',\r\n    password: '',\r\n    rePassword: ''\r\n})\r\n\r\nconst loginRules = reactive({\r\n    username: [\r\n        { require: true, message: '请输入用户名', trigger: \"blur\" },\r\n        {\r\n            min: 2,\r\n            max: 8,\r\n            message: \"长度在 2到 8 个字符\",\r\n            trigger: \"blur\",\r\n        }],\r\n    password: [\r\n        { require: true, message: '请输入密码', trigger: \"blur\" },\r\n        {\r\n            min: 6,\r\n            max: 12,\r\n            message: \"长度在 6 到 12 个字符\",\r\n            trigger: \"blur\",\r\n        }],\r\n    rePassword:\r\n})\r\n\r\n//获取表单元素\r\nconst loginFormRef = ref()\r\nconst isAgree = ref(false)\r\nconst rAgree = ref(false)\r\n\r\n\r\n//登录按钮\r\nconst login = () => {\r\n    // console.log(loginFormRef);\r\n    // console.log(login_Form);\r\n    //预验证\r\n    loginFormRef.value.validate(async (valid) => {\r\n        // 根据预验证 判断是否发起请求\r\n        if (!valid) return;\r\n\r\n        const res = await loginApi(login_Form)\r\n        // console.log(res.data);\r\n        // console.log(res.meta);\r\n        if (res.meta.status !== 200) return ElMessage.error('登录失败！')\r\n\r\n        ElMessage({\r\n            message: '登录成功!',\r\n            type: 'success',\r\n        })\r\n        window.sessionStorage.setItem('token', res.data.token)\r\n        router.push('/home')\r\n    })\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\nbody {\r\n    position: relative;\r\n}\r\n\r\n.type {\r\n    display: none;\r\n}\r\n\r\n#box {\r\n    z-index: 100;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    background-color: rgba(221, 221, 221, 0.5);\r\n    // auto——效果和没有定义pointer-events属性相同，鼠标不会穿透当前层。\r\n    pointer-events: auto;\r\n\r\n    .login_box {\r\n        position: absolute;\r\n        left: 50%;\r\n        top: 50%;\r\n        transform: translate(-50%, -50%);\r\n        width: 480px;\r\n        height: 600px;\r\n        border-radius: 20px;\r\n        box-shadow: 10px 5px 5px rgb(225, 219, 219);\r\n        background: #fff;\r\n\r\n\r\n        .login_button {\r\n            width: 300px;\r\n        }\r\n    }\r\n\r\n    .demo-tabs>.el-tab-pane {\r\n        font-size: 21px;\r\n    }\r\n}\r\n\r\n.title {\r\n    margin: 40px 0px 20px;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-left: 20px;\r\n    font-family: \"Microsoft YaHei\";\r\n\r\n}\r\n\r\n\r\n.checkBox {\r\n    margin-left: 20px;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n.close_box {\r\n    width: 40px;\r\n    height: 40px;\r\n    position: absolute;\r\n    top: 15x;\r\n    right: -50px;\r\n    border-radius: 20px;\r\n    cursor: pointer;\r\n    background-color: rgb(227, 222, 222);\r\n    // 背景线性渐变\r\n    // background: linear-gradient(to bottom right, pink, yellow, violet, skyblue);\r\n\r\n\r\n    span {\r\n        font-size: 30px;\r\n        color: rgb(125, 127, 127);\r\n        margin-left: 13px;\r\n        line-height: 35px;\r\n    }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}