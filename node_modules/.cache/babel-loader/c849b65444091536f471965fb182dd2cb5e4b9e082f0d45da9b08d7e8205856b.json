{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2ddd9490\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"login_box\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"x\", -1 /* HOISTED */));\nconst _hoisted_3 = [_hoisted_2];\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"title\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"每日算法\")], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" vuex 页面中直接使用渲染时与vue2中的使用方法相同 \"), _createElementVNode(\"div\", {\n    id: \"box\",\n    class: _normalizeClass({\n      type: $setup.store.state.showLoginView\n    })\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"close_box\",\n    onClick: $setup.handleClick\n  }, _hoisted_3), _hoisted_4, _createVNode(_component_el_form, {\n    ref: \"loginFormRef\",\n    model: $setup.login_Form,\n    \"status-icon\": \"\",\n    rules: $setup.loginRules,\n    \"label-width\": \"100px\",\n    class: \"demo-ruleForm\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"账号名\",\n      prop: \"username\",\n      style: {\n        \"width\": \"400px\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.login_Form.username,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.login_Form.username = $event),\n        type: \"input\",\n        size: \"large\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"密码\",\n      prop: \"password\",\n      style: {\n        \"width\": \"400px\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.login_Form.password,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.login_Form.password = $event),\n        type: \"password\",\n        autocomplete: \"off\",\n        size: \"large\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        class: \"login_button\",\n        type: \"primary\",\n        size: \"large\",\n        onClick: $setup.login\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"登录/注册\")]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\", \"rules\"])])], 2 /* CLASS */)], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;EAGaA,KAAK,EAAC;AAAW;gEAEdC,oBAAc,cAAR,GAAC;oBAAPC,UAAc;gEAElBD,oBAEM;EAFDD,KAAK,EAAC;AAAO,iBACdC,oBAAa,YAAT,MAAI;;;;;;;6DAPpBE,qDAAqC,EACrCF,oBAuBM;IAvBDG,EAAE,EAAC,KAAK;IAAEJ,KAAK;MAAAK,MAAUC,YAAK,CAACC,KAAK,CAACC;IAAa;MACnDP,oBAmBM,OAnBNQ,UAmBM,GAlBFR,oBAEM;IAFDD,KAAK,EAAC,WAAW;IAAEU,OAAK,EAAEJ;kBAG/BK,UAEM,EACNC,aAWUC;IAXDC,GAAG,EAAC,cAAc;IAAEC,KAAK,EAAET,iBAAU;IAAE,aAAW,EAAX,EAAW;IAAEU,KAAK,EAAEV,iBAAU;IAAE,aAAW,EAAC,OAAO;IAC/FN,KAAK,EAAC;;sBACN,MAEe,CAFfY,aAEeK;MAFDC,KAAK,EAAC,KAAK;MAACC,IAAI,EAAC,UAAU;MAACC,KAAmB,EAAnB;QAAA;MAAA;;wBACtC,MAAoE,CAApER,aAAoES;oBAAjDf,iBAAU,CAACgB,QAAQ;mEAAnBhB,iBAAU,CAACgB,QAAQ;QAAEjB,IAAI,EAAC,OAAO;QAACkB,IAAI,EAAC;;;QAE9DX,aAEeK;MAFDC,KAAK,EAAC,IAAI;MAACC,IAAI,EAAC,UAAU;MAACC,KAAmB,EAAnB;QAAA;MAAA;;wBACrC,MAA0F,CAA1FR,aAA0FS;oBAAvEf,iBAAU,CAACkB,QAAQ;mEAAnBlB,iBAAU,CAACkB,QAAQ;QAAEnB,IAAI,EAAC,UAAU;QAACoB,YAAY,EAAC,KAAK;QAACF,IAAI,EAAC;;;QAEpFX,aAEeK;wBADX,MAA4F,CAA5FL,aAA4Fc;QAAjF1B,KAAK,EAAC,cAAc;QAACK,IAAI,EAAC,SAAS;QAACkB,IAAI,EAAC,OAAO;QAAEb,OAAK,EAAEJ;;0BAAO,MAAK,kBAAL,OAAK","names":["class","_createElementVNode","_hoisted_2","_createCommentVNode","id","type","$setup","state","showLoginView","_hoisted_1","onClick","_hoisted_4","_createVNode","_component_el_form","ref","model","rules","_component_el_form_item","label","prop","style","_component_el_input","username","size","password","autocomplete","_component_el_button"],"sourceRoot":"","sources":["D:\\前端基础\\22科技月评-算法在线刷题平台\\algorithmic_platform\\src\\pages\\Login\\index.vue"],"sourcesContent":["<template>\r\n    <!-- vuex 页面中直接使用渲染时与vue2中的使用方法相同 -->\r\n    <div id=\"box\" :class=\"{ type: store.state.showLoginView }\">\r\n        <div class=\"login_box\">\r\n            <div class=\"close_box\" @click=\"handleClick\">\r\n                <span>x</span>\r\n            </div>\r\n            <div class=\"title\">\r\n                <h1>每日算法</h1>\r\n            </div>\r\n            <el-form ref=\"loginFormRef\" :model=\"login_Form\" status-icon :rules=\"loginRules\" label-width=\"100px\"\r\n                class=\"demo-ruleForm\">\r\n                <el-form-item label=\"账号名\" prop=\"username\" style=\"width:400px\">\r\n                    <el-input v-model=\"login_Form.username\" type=\"input\" size=\"large\" />\r\n                </el-form-item>\r\n                <el-form-item label=\"密码\" prop=\"password\" style=\"width:400px\">\r\n                    <el-input v-model=\"login_Form.password\" type=\"password\" autocomplete=\"off\" size=\"large\" />\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button class=\"login_button\" type=\"primary\" size=\"large\" @click=\"login\">登录/注册</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </div>\r\n\r\n\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref } from 'vue'\r\nimport { loginApi } from '../../axios/apis'\r\nimport { useRouter } from 'vue-router';\r\n//按需引入 useStore()方法\r\nimport { useStore } from 'vuex'\r\n\r\nconst router = useRouter()\r\n\r\n// Vue3中store类似于Vue2中this.$store\r\n// useStore()方法创建store对象，相当于src/store/index.js中的store实例对象\r\nconst store = useStore()\r\n\r\n// 修改showLoginView的值\r\nconst handleClick = () => {\r\n    //触发mutation, 用于同步修改state的信息\r\n    store.commit('changeStyle', !store.state.showLoginView)\r\n}\r\n\r\nconst login_Form = reactive({\r\n    username: 'admin',\r\n    password: '123456'\r\n})\r\n\r\nconst loginRules = reactive({\r\n    username: [\r\n        { required: true, message: \"请输入账号名\", trigger: \"blur\" },\r\n        {\r\n            min: 5,\r\n            max: 10,\r\n            message: \"长度在 65到 10 个字符\",\r\n            trigger: \"blur\",\r\n        }],\r\n    password: [\r\n        { required: true, message: \"请输入密码\", trigger: \"blur\" },]\r\n})\r\n\r\n//获取表单元素\r\nconst loginFormRef = ref()\r\n\r\n//登录/注册按钮\r\nconst login = () => {\r\n    // console.log(loginFormRef);\r\n    // console.log(login_Form);\r\n    //预验证\r\n    loginFormRef.value.validate(async (valid) => {\r\n        // 根据预验证 判断是否发起请求\r\n        if (!valid) return;\r\n\r\n        const res = await loginApi(login_Form)\r\n        // console.log(res.data);\r\n        window.sessionStorage.setItem('token', res.data.token)\r\n        console.log(res.data.token);\r\n        router.push('/home')\r\n    })\r\n}\r\n\r\n// //是否显示登录/注册框\r\n// const showLoginView = ref(false)\r\n// //改变样式显示隐藏登录框\r\n// const changeStyle = () => {\r\n//     showLoginView.value = true\r\n// }\r\n\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\nbody {\r\n    position: relative;\r\n}\r\n\r\n#box {\r\n    z-index: 100;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    background-color: rgba(221, 221, 221, 0.5);\r\n    // auto——效果和没有定义pointer-events属性相同，鼠标不会穿透当前层。\r\n    pointer-events: auto;\r\n\r\n    .login_box {\r\n        position: absolute;\r\n        left: 50%;\r\n        top: 50%;\r\n        transform: translate(-50%, -50%);\r\n        width: 480px;\r\n        height: 500px;\r\n        border-radius: 20px;\r\n        box-shadow: 10px 5px 5px rgb(225, 219, 219);\r\n        background: #fff;\r\n\r\n\r\n        .login_button {\r\n            width: 300px;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n.title {\r\n    margin: 40px 0px 20px;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-left: 20px;\r\n    font-family: \"Microsoft YaHei\";\r\n\r\n}\r\n\r\n.type {\r\n    display: none;\r\n}\r\n\r\n.close_box {\r\n    width: 40px;\r\n    height: 40px;\r\n    position: absolute;\r\n    top: 15x;\r\n    right: -50px;\r\n    border-radius: 20px;\r\n    cursor: pointer;\r\n    background-color: rgb(227, 222, 222);\r\n    // 背景线性渐变\r\n    // background: linear-gradient(to bottom right, pink, yellow, violet, skyblue);\r\n\r\n\r\n    span {\r\n        font-size: 30px;\r\n        color: rgb(125, 127, 127);\r\n        margin-left: 13px;\r\n        line-height: 35px;\r\n    }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}