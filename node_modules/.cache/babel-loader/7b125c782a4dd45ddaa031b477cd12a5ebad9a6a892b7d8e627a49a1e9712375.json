{"ast":null,"code":"import { onMounted, ref, reactive } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { getQuestionListById, changeQuestionState } from '@/axios/apis.js';\nimport { ElMessage } from \"element-plus\";\nexport default {\n  __name: 'Update',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const route = useRoute();\n\n    //接收跳转携带过来的参数Id\n    let Id = route.query._id;\n    console.log(Id);\n    const QuestionDetail = ref({});\n    const QuestionDetailRef = ref();\n    const src = 'https://cube.elemecdn.com/6/94/4d3ea53c084bad6931a56d5158a48jpeg.jpeg';\n    var checkPrice = (rule, value, cb) => {\n      //验证价格的正则表达式\n      let regPrice = /^[1-9]\\d*|0$/;\n      if (regPrice.test(value)) {\n        cb();\n      } else {\n        cb(new Error(\"价格是不小于0的整数\"));\n      }\n    };\n    var checkNumber = (rule, value, cb) => {\n      //验证价格的正则表达式\n      let regNumber = /^[1-9]\\d*|0$/;\n      if (regNumber.test(value)) {\n        cb();\n      } else {\n        cb(new Error(\"数量是不小于0的整数\"));\n      }\n    };\n    var checkWeight = (rule, value, cb) => {\n      //验证价格的正则表达式\n      let regWeight = /^[1-9]\\d*|0$/;\n      if (regWeight.test(value)) {\n        cb();\n      } else {\n        cb(new Error(\"重量是不小于0的整数\"));\n      }\n    };\n    const QuestionDetailRules = reactive({\n      goods_price: [{\n        required: true,\n        message: \"请输入价格\",\n        trigger: \"blur\"\n      }, {\n        validator: checkPrice,\n        trigger: \"blur\"\n      }],\n      goods_number: [{\n        required: true,\n        message: \"请输入数量\",\n        trigger: \"blur\"\n      }, {\n        validator: checkNumber,\n        trigger: \"blur\"\n      }],\n      goods_weight: [{\n        required: true,\n        message: \"请输入重量\",\n        trigger: \"blur\"\n      }, {\n        validator: checkWeight,\n        trigger: \"blur\"\n      }]\n    });\n    const labelPosition = ref('left');\n    const size = ref('large');\n    onMounted(() => {\n      getQuestionListByIdView();\n    });\n    const getQuestionListByIdView = async () => {\n      const res = await getQuestionListById(Id);\n      if (res.status !== 200) {\n        return ElMessage.error(\"获取此题目数据失败\");\n      }\n      QuestionDetail.value = res.data;\n    };\n\n    //取消按钮\n    const resetForm = () => {\n      // QuestionDetailRef.value.resetFields()\n      getQuestionListByIdView();\n    };\n\n    //确定按钮\n    const editInfo = async () => {\n      console.log(QuestionDetail.value);\n      const res = await changeQuestionState(QuestionDetail.value);\n      console.log(res);\n    };\n    const __returned__ = {\n      route,\n      get Id() {\n        return Id;\n      },\n      set Id(v) {\n        Id = v;\n      },\n      QuestionDetail,\n      QuestionDetailRef,\n      src,\n      get checkPrice() {\n        return checkPrice;\n      },\n      set checkPrice(v) {\n        checkPrice = v;\n      },\n      get checkNumber() {\n        return checkNumber;\n      },\n      set checkNumber(v) {\n        checkNumber = v;\n      },\n      get checkWeight() {\n        return checkWeight;\n      },\n      set checkWeight(v) {\n        checkWeight = v;\n      },\n      QuestionDetailRules,\n      labelPosition,\n      size,\n      getQuestionListByIdView,\n      resetForm,\n      editInfo,\n      onMounted,\n      ref,\n      reactive,\n      get useRoute() {\n        return useRoute;\n      },\n      get getQuestionListById() {\n        return getQuestionListById;\n      },\n      get changeQuestionState() {\n        return changeQuestionState;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"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","names":["onMounted","ref","reactive","useRoute","getQuestionListById","changeQuestionState","ElMessage","route","Id","query","_id","console","log","QuestionDetail","QuestionDetailRef","src","checkPrice","rule","value","cb","regPrice","test","Error","checkNumber","regNumber","checkWeight","regWeight","QuestionDetailRules","goods_price","required","message","trigger","validator","goods_number","goods_weight","labelPosition","size","getQuestionListByIdView","res","status","error","data","resetForm","editInfo"],"sources":["D:/前端基础/22科技月评-算法在线刷题平台/algorithmic_platform/src/components/Question/Update.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-card>\r\n            <el-form ref=\"QuestionDetailRef\" :label-position=\"labelPosition\" label-width=\"100px\" :model=\"QuestionDetail\"\r\n                :rules=\"QuestionDetailRules\" style=\"max-width: 800px\" :size=\"size\">\r\n                <el-form-item prop=\"title\" label=\"题目\">\r\n                    <el-input v-model=\"QuestionDetail.title\" type=\"textarea\" />\r\n                </el-form-item>\r\n                <el-form-item prop=\"description\" label=\"题目描述\">\r\n                    <el-input v-model=\"QuestionDetail.description\" />\r\n                </el-form-item>\r\n                <el-form-item prop=\"degree\" label=\"难度等级\">\r\n                    <el-input v-model=\"QuestionDetail.degree\" />\r\n                </el-form-item>\r\n                <el-form-item prop=\"submit\" label=\"提交次数\">\r\n                    <el-input v-model=\"QuestionDetail.submit\" disabled />\r\n                </el-form-item>\r\n                <el-form-item prop=\"pass\" label=\"通过次数\">\r\n                    <el-input v-model=\"QuestionDetail.pass\" disabled />\r\n                </el-form-item>\r\n                <el-form-item label=\"状态\" prop=\"state\">\r\n                    <el-tag class=\"ml-2\" v-if=\"QuestionDetail.state === true\" type=\"success\" size=\"large\"> 已发布\r\n                    </el-tag>\r\n                    <el-tag class=\"ml-2\" v-if=\"QuestionDetail.state === false\" type=\"\" size=\"large\"> 待发布\r\n                    </el-tag>\r\n                    <!-- <el-tag class=\"ml-2\" v-else type=\"danger\" size=\"large\">\r\n                        <el-input v-model=\"QuestionDetail.is_promote\" size=\"small\" />\r\n                    </el-tag> -->\r\n                </el-form-item>\r\n                <el-form-item label=\"详情图片\" prop=\"is_promote\">\r\n                    <div class=\"demo-image__placeholder\">\r\n                        <div class=\"block\">\r\n                            <el-image :src=\"src\" class=\"imgSrc\">\r\n                                <template #placeholder>\r\n                                    <div class=\"image-slot\">Loading<span class=\"dot\">...</span></div>\r\n                                </template>\r\n                            </el-image>\r\n                        </div>\r\n                    </div>\r\n\r\n                </el-form-item>\r\n            </el-form>\r\n            <el-button type=\"primary\" @click=\"editInfo\" size=\"large\"> 确定 </el-button>\r\n            <el-button type=\"info\" @click=\"resetForm(QuestionDetailRef)\" size=\"large\">取消</el-button>\r\n\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, ref, reactive } from 'vue'\r\nimport { useRoute } from 'vue-router'\r\nimport { getQuestionListById, changeQuestionState } from '@/axios/apis.js'\r\nimport { ElMessage } from \"element-plus\";\r\n\r\nconst route = useRoute()\r\n\r\n//接收跳转携带过来的参数Id\r\nlet Id = route.query._id;\r\nconsole.log(Id);\r\n\r\nconst QuestionDetail = ref({})\r\nconst QuestionDetailRef = ref()\r\nconst src =\r\n    'https://cube.elemecdn.com/6/94/4d3ea53c084bad6931a56d5158a48jpeg.jpeg'\r\n\r\nvar checkPrice = (rule, value, cb) => {\r\n    //验证价格的正则表达式\r\n    let regPrice = /^[1-9]\\d*|0$/\r\n    if (regPrice.test(value)) {\r\n        cb();\r\n    } else {\r\n        cb(new Error(\"价格是不小于0的整数\"));\r\n    }\r\n}\r\n\r\nvar checkNumber = (rule, value, cb) => {\r\n    //验证价格的正则表达式\r\n    let regNumber = /^[1-9]\\d*|0$/\r\n    if (regNumber.test(value)) {\r\n        cb();\r\n    } else {\r\n        cb(new Error(\"数量是不小于0的整数\"));\r\n    }\r\n}\r\nvar checkWeight = (rule, value, cb) => {\r\n    //验证价格的正则表达式\r\n    let regWeight = /^[1-9]\\d*|0$/\r\n    if (regWeight.test(value)) {\r\n        cb();\r\n    } else {\r\n        cb(new Error(\"重量是不小于0的整数\"));\r\n    }\r\n}\r\nconst QuestionDetailRules = reactive({\r\n    goods_price: [\r\n        { required: true, message: \"请输入价格\", trigger: \"blur\" },\r\n        { validator: checkPrice, trigger: \"blur\" },\r\n    ],\r\n    goods_number: [\r\n        { required: true, message: \"请输入数量\", trigger: \"blur\" },\r\n        { validator: checkNumber, trigger: \"blur\" },\r\n\r\n    ],\r\n    goods_weight: [\r\n        { required: true, message: \"请输入重量\", trigger: \"blur\" },\r\n        { validator: checkWeight, trigger: \"blur\" },\r\n    ],\r\n});\r\n\r\nconst labelPosition = ref('left')\r\nconst size = ref('large')\r\n\r\n\r\nonMounted(() => {\r\n    getQuestionListByIdView()\r\n})\r\n\r\n\r\nconst getQuestionListByIdView = async () => {\r\n    const res = await getQuestionListById(Id)\r\n    if (res.status !== 200) {\r\n        return ElMessage.error(\"获取此题目数据失败\");\r\n    }\r\n    QuestionDetail.value = res.data\r\n}\r\n\r\n//取消按钮\r\nconst resetForm = () => {\r\n    // QuestionDetailRef.value.resetFields()\r\n    getQuestionListByIdView()\r\n}\r\n\r\n//确定按钮\r\nconst editInfo = async () => {\r\n    console.log(QuestionDetail.value);\r\n    const res = await changeQuestionState(QuestionDetail.value)\r\n    console.log(res);\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style  lang=\"less\" scoped>\r\n.imgSrc {\r\n    width: 300px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}