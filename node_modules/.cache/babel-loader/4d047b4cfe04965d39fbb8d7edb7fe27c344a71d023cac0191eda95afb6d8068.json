{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive, ref, onMounted } from \"vue\";\nimport { useRouter } from 'vue-router';\nimport { getQuestionList, deleteOneGood } from \"@/axios/apis.js\";\nimport { ElMessage, ElMessageBox } from \"element-plus\";\nexport default {\n  __name: 'index',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const router = useRouter();\n    const queryInfo = reactive({\n      page: 1\n    });\n    const questionList = ref([]);\n    const selectList = ref([]);\n    const dataList = ref([]);\n    const total = ref(0);\n    onMounted(() => {\n      getQuestionListView();\n    });\n\n    //获取商品列表\n    const getQuestionListView = async () => {\n      const res = await getQuestionList(queryInfo);\n      // console.log(res);\n      if (res.status === 200) {\n        questionList.value = res.data;\n        total.value = res.total;\n      }\n    };\n\n    //分页功能\n    const handleCurrentChange = newPage => {\n      queryInfo.page = newPage;\n      getQuestionListView();\n    };\n\n    //跳转后 修改题目详情\n    const goUpdatePage = data => {\n      router.push({\n        path: \"/question/update\",\n        query: {\n          data\n        }\n      });\n    };\n\n    //删除商品\n    const removeQuestionById = async _id => {\n      const confirmRes = await ElMessageBox.confirm(\"此操作将永久删除该用户, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).catch(err => err);\n      if (confirmRes !== \"confirm\") {\n        return ElMessage.error(\"已取消删除\");\n      }\n      const res = await deleteOneGood(_id);\n      // console.log(res);\n      if (res.status !== 200) {\n        return ElMessage.error(\"删除用户失败\");\n      }\n      ElMessage({\n        type: \"success\",\n        message: res.message\n      });\n      getQuestionListView();\n    };\n    const __returned__ = {\n      router,\n      queryInfo,\n      questionList,\n      selectList,\n      dataList,\n      total,\n      getQuestionListView,\n      handleCurrentChange,\n      goUpdatePage,\n      removeQuestionById,\n      reactive,\n      ref,\n      onMounted,\n      get useRouter() {\n        return useRouter;\n      },\n      get getQuestionList() {\n        return getQuestionList;\n      },\n      get deleteOneGood() {\n        return deleteOneGood;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":";AA0EA,SAASA,QAAQ,EAAEC,GAAG,EAAEC,SAAS,QAAQ,KAAK;AAC9C,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,eAAe,EAAEC,aAAa,QAAQ,iBAAiB;AAChE,SAASC,SAAS,EAAEC,YAAY,QAAQ,cAAc;;;;;;;IACtD,MAAMC,MAAM,GAAGL,SAAS,EAAE;IAE1B,MAAMM,SAAS,GAAGT,QAAQ,CAAC;MACvBU,IAAI,EAAE;IACV,CAAC,CAAC;IAEF,MAAMC,YAAY,GAAGV,GAAG,CAAC,EAAE,CAAC;IAC5B,MAAMW,UAAU,GAAGX,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMY,QAAQ,GAAGZ,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMa,KAAK,GAAGb,GAAG,CAAC,CAAC,CAAC;IAEpBC,SAAS,CAAC,MAAM;MACZa,mBAAmB,EAAE;IACzB,CAAC,CAAC;;IAEF;IACA,MAAMA,mBAAmB,GAAG,YAAY;MACpC,MAAMC,GAAG,GAAG,MAAMZ,eAAe,CAACK,SAAS,CAAC;MAC5C;MACA,IAAIO,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACpBN,YAAY,CAACO,KAAK,GAAGF,GAAG,CAACG,IAAI;QAC7BL,KAAK,CAACI,KAAK,GAAGF,GAAG,CAACF,KAAK;MAC3B;IACJ,CAAC;;IAGD;IACA,MAAMM,mBAAmB,GAAIC,OAAO,IAAK;MACrCZ,SAAS,CAACC,IAAI,GAAGW,OAAO;MACxBN,mBAAmB,EAAE;IACzB,CAAC;;IAED;IACA,MAAMO,YAAY,GAAIH,IAAI,IAAK;MAC3BX,MAAM,CAACe,IAAI,CAAC;QAAEC,IAAI,EAAE,kBAAkB;QAAEC,KAAK,EAAE;UAAEN;QAAK;MAAE,CAAC,CAAC;IAC9D,CAAC;;IAGD;IACA,MAAMO,kBAAkB,GAAG,MAAOC,GAAG,IAAK;MACtC,MAAMC,UAAU,GAAG,MAAMrB,YAAY,CAACsB,OAAO,CAAC,oBAAoB,EAAE,IAAI,EAAE;QACtEC,iBAAiB,EAAE,IAAI;QACvBC,gBAAgB,EAAE,IAAI;QACtBC,IAAI,EAAE;MACV,CAAC,CAAC,CAACC,KAAK,CAAEC,GAAG,IAAKA,GAAG,CAAC;MAEtB,IAAIN,UAAU,KAAK,SAAS,EAAE;QAC1B,OAAOtB,SAAS,CAAC6B,KAAK,CAAC,OAAO,CAAC;MACnC;MACA,MAAMnB,GAAG,GAAG,MAAMX,aAAa,CAACsB,GAAG,CAAC;MACpC;MACA,IAAIX,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACpB,OAAOX,SAAS,CAAC6B,KAAK,CAAC,QAAQ,CAAC;MACpC;MACA7B,SAAS,CAAC;QACN0B,IAAI,EAAE,SAAS;QACfI,OAAO,EAAEpB,GAAG,CAACoB;MACjB,CAAC,CAAC;MACFrB,mBAAmB,EAAE;IACzB,CAAC","names":["reactive","ref","onMounted","useRouter","getQuestionList","deleteOneGood","ElMessage","ElMessageBox","router","queryInfo","page","questionList","selectList","dataList","total","getQuestionListView","res","status","value","data","handleCurrentChange","newPage","goUpdatePage","push","path","query","removeQuestionById","_id","confirmRes","confirm","confirmButtonText","cancelButtonText","type","catch","err","error","message"],"sources":["D:/前端基础/22科技月评-算法在线刷题平台/algorithmic_platform/src/components/Question/index.vue"],"sourcesContent":["<template>\r\n    <!-- 商品列表代替 -->\r\n    <div>\r\n        <!-- 面包屑导航区域 -->\r\n        <el-breadcrumb separator=\">\">\r\n            <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n            <el-breadcrumb-item>题目管理</el-breadcrumb-item>\r\n            <el-breadcrumb-item>题目列表</el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n\r\n        <el-card>\r\n\r\n            <!-- 搜索区域\r\n            <template #header>\r\n                <div class=\"card-header\">\r\n                    <el-row :gutter=\"25\">\r\n                        <el-col :span=\"9\">\r\n                            <el-input placeholder=\"请输入内容\" v-model=\"queryInfo.query\" clearable @clear=\"getUserListView\">\r\n                            </el-input>\r\n                        </el-col>\r\n                        <el-col :span=\"3\">\r\n                            <el-button type=\"primary\" @click=\"getUserListView\">查询</el-button>\r\n                        </el-col>\r\n                    </el-row>\r\n                </div>\r\n            </template> -->\r\n\r\n            <el-tag class=\"ml-2\" size=\"large\" type=\"success\">题目列表</el-tag>\r\n            <el-table :data=\"questionList\" stripe border style=\"width: 100%\">\r\n                <el-table-column type=\"index\" />\r\n                <el-table-column prop=\"title\" label=\"题目\" width=\"160\" />\r\n                <el-table-column prop=\"description\" label=\"题目描述\" width=\"520\" />\r\n                <el-table-column prop=\"degree\" label=\"难度等级\" width=\"110\">\r\n                    <template v-slot=\"scope\">\r\n                        <el-tag type=\"primary\" v-if=\"scope.row.degree === '简单'\">简单</el-tag>\r\n                        <el-tag type=\"danger\" v-if=\"scope.row.degree === '困难'\">困难</el-tag>\r\n                        <el-tag type=\"success\" v-else-if=\"scope.row.degree === '中等'\">中等</el-tag>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column prop=\"submit\" label=\"提交次数\" width=\"110\" />\r\n                <el-table-column prop=\"pass\" label=\"通过次数\" width=\"110\" />\r\n                <el-table-column label=\"状态\" prop=\"state\" width=\"110\">\r\n                    <template v-slot=\"scope\">\r\n                        <el-tag type=\"success\" v-if=\"scope.row.state === true\">已发布</el-tag>\r\n                        <el-tag type=\"\" v-else>待发布</el-tag>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column prop=\"add_time\" label=\"添加时间\" />\r\n                <el-table-column prop=\"upd_time\" label=\"更新时间\" />\r\n                <el-table-column label=\"操作\">\r\n                    <template v-slot=\"scope\">\r\n                        <!-- 修改按钮 -->\r\n                        <el-tooltip class=\"item\" effect=\"dark\" content=\"跳转修改题目\" placement=\"top\" :enterable=\"false\">\r\n                            <el-button type=\"primary\" class=\"iconfont icon-zuoti\" circle\r\n                                @click=\"goUpdatePage(scope.row)\" size=\"large\">\r\n                            </el-button>\r\n                        </el-tooltip>\r\n                        <!-- 删除按钮 -->\r\n                        <el-button type=\"danger\" class=\"iconfont icon-shanchu2\" circle\r\n                            @click=\"removeQuestionById(scope.row._id)\" size=\"large\">\r\n                        </el-button>\r\n\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n            <!-- 分页区域 -->\r\n            <el-pagination @current-change=\"handleCurrentChange\" :current-page=\"queryInfo.page\"\r\n                :page-sizes=\"[5, 10, 15]\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\r\n            </el-pagination>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref, onMounted } from \"vue\";\r\nimport { useRouter } from 'vue-router'\r\nimport { getQuestionList, deleteOneGood } from \"@/axios/apis.js\";\r\nimport { ElMessage, ElMessageBox } from \"element-plus\";\r\nconst router = useRouter()\r\n\r\nconst queryInfo = reactive({\r\n    page: 1,\r\n});\r\n\r\nconst questionList = ref([]);\r\nconst selectList = ref([]);\r\nconst dataList = ref([]);\r\nconst total = ref(0);\r\n\r\nonMounted(() => {\r\n    getQuestionListView()\r\n});\r\n\r\n//获取商品列表\r\nconst getQuestionListView = async () => {\r\n    const res = await getQuestionList(queryInfo);\r\n    // console.log(res);\r\n    if (res.status === 200) {\r\n        questionList.value = res.data;\r\n        total.value = res.total;\r\n    }\r\n};\r\n\r\n\r\n//分页功能\r\nconst handleCurrentChange = (newPage) => {\r\n    queryInfo.page = newPage;\r\n    getQuestionListView();\r\n};\r\n\r\n//跳转后 修改题目详情\r\nconst goUpdatePage = (data) => {\r\n    router.push({ path: \"/question/update\", query: { data } })\r\n}\r\n\r\n\r\n//删除商品\r\nconst removeQuestionById = async (_id) => {\r\n    const confirmRes = await ElMessageBox.confirm(\"此操作将永久删除该用户, 是否继续?\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n    }).catch((err) => err)\r\n\r\n    if (confirmRes !== \"confirm\") {\r\n        return ElMessage.error(\"已取消删除\");\r\n    }\r\n    const res = await deleteOneGood(_id)\r\n    // console.log(res);\r\n    if (res.status !== 200) {\r\n        return ElMessage.error(\"删除用户失败\");\r\n    }\r\n    ElMessage({\r\n        type: \"success\",\r\n        message: res.message,\r\n    });\r\n    getQuestionListView();\r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}