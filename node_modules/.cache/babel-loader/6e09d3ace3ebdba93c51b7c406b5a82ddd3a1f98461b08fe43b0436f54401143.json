{"ast":null,"code":"import { ref, reactive } from 'vue';\nimport { AddOneQuestion } from '@/axios/apis.js';\nimport { ElMessage } from \"element-plus\";\nexport default {\n  __name: 'index',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const QuestionDetail = ref({});\n    const QuestionDetailRef = ref();\n    const QuestionDetailRules = reactive({\n      title: [{\n        required: true,\n        message: \"请输入题目\",\n        trigger: \"blur\"\n      }],\n      description: [{\n        required: true,\n        message: \"请输入描述\",\n        trigger: \"blur\"\n      }],\n      degree: [{\n        required: true,\n        message: \"请输入难度\",\n        trigger: \"blur\"\n      }]\n    });\n    const labelPosition = ref('left');\n    const size = ref('large');\n\n    //取消按钮\n    const resetForm = () => {\n      QuestionDetailRef.value.resetFields();\n    };\n\n    //确定按钮\n    const AddQuestion = async () => {\n      const res = await AddOneQuestion(QuestionDetail.value);\n      ElMessage({\n        type: \"success\",\n        message: res.message\n      });\n      QuestionDetailRef.value.resetFields();\n    };\n    const __returned__ = {\n      QuestionDetail,\n      QuestionDetailRef,\n      QuestionDetailRules,\n      labelPosition,\n      size,\n      resetForm,\n      AddQuestion,\n      ref,\n      reactive,\n      get AddOneQuestion() {\n        return AddOneQuestion;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AA6CA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAK;AACnC,SAASC,cAAc,QAAQ,iBAAiB;AAChD,SAASC,SAAS,QAAQ,cAAc;;;;;;;IAIxC,MAAMC,cAAc,GAAGJ,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9B,MAAMK,iBAAiB,GAAGL,GAAG,EAAE;IAE/B,MAAMM,mBAAmB,GAAGL,QAAQ,CAAC;MACjCM,KAAK,EAAE,CACH;QAAEC,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO,CAAC,CACxD;MACDC,WAAW,EAAE,CACT;QAAEH,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO,CAAC,CACxD;MACDE,MAAM,EAAE,CACJ;QAAEJ,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO,CAAC;IAE7D,CAAC,CAAC;IACF,MAAMG,aAAa,GAAGb,GAAG,CAAC,MAAM,CAAC;IACjC,MAAMc,IAAI,GAAGd,GAAG,CAAC,OAAO,CAAC;;IAEzB;IACA,MAAMe,SAAS,GAAG,MAAM;MACpBV,iBAAiB,CAACW,KAAK,CAACC,WAAW,EAAE;IACzC,CAAC;;IAED;IACA,MAAMC,WAAW,GAAG,YAAY;MAC5B,MAAMC,GAAG,GAAG,MAAMjB,cAAc,CAACE,cAAc,CAACY,KAAK,CAAC;MACtDb,SAAS,CAAC;QACNiB,IAAI,EAAE,SAAS;QACfX,OAAO,EAAEU,GAAG,CAACV;MACjB,CAAC,CAAC;MACFJ,iBAAiB,CAACW,KAAK,CAACC,WAAW,EAAE;IACzC,CAAC","names":["ref","reactive","AddOneQuestion","ElMessage","QuestionDetail","QuestionDetailRef","QuestionDetailRules","title","required","message","trigger","description","degree","labelPosition","size","resetForm","value","resetFields","AddQuestion","res","type"],"sources":["D:/前端基础/22科技月评-算法在线刷题平台/algorithmic_platform/src/components/AddQuestion/index.vue"],"sourcesContent":["<template>\r\n    <div class=\"addQues\">\r\n        <el-card>\r\n            <el-tag class=\"header-title\" size=\"large\" type=\"primary\">添加题目</el-tag>\r\n\r\n            <el-form ref=\"QuestionDetailRef\" :label-position=\"labelPosition\" label-width=\"150px\" :model=\"QuestionDetail\"\r\n                :rules=\"QuestionDetailRules\" style=\"max-width: 1000px\" :size=\"size\">\r\n                <el-form-item prop=\"title\" label=\"题目\">\r\n                    <el-input v-model=\"QuestionDetail.title\" type=\"textarea\" :rows=\"10\" clearable />\r\n                </el-form-item>\r\n                <el-form-item prop=\"description\" label=\"题目描述\">\r\n                    <el-input v-model=\"QuestionDetail.description\" type=\"textarea\" :rows=\"18\" clearable />\r\n                </el-form-item>\r\n                <el-form-item prop=\"degree\" label=\"难度等级\">\r\n                    <el-input v-model=\"QuestionDetail.degree\" clearable />\r\n                </el-form-item>\r\n                <el-form-item prop=\"submit\" label=\"提交次数\">\r\n                    <el-input v-model=\"QuestionDetail.submit\" disabled />\r\n                </el-form-item>\r\n                <el-form-item prop=\"pass\" label=\"通过次数\">\r\n                    <el-input v-model=\"QuestionDetail.pass\" disabled />\r\n                </el-form-item>\r\n                <el-form-item label=\"状态\" prop=\"state\">\r\n                    <el-input v-model=\"QuestionDetail.state\" size=\"small\" placeholder=\"\r\n                    题目是否发布(true/false)\" style=\"height: 30px;\" />\r\n                </el-form-item>\r\n                <el-form-item label=\"详情图片\" prop=\"is_promote\">\r\n                    <!-- action 表示图片要上传到后台API 地址 -->\r\n                    <!-- <el-upload class=\"avatar-uploader\"\r\n                        action=\"https://run.mocky.io/v3/9d059bf9-4660-45f2-925d-ce80ad6c4d15\" :show-file-list=\"false\"\r\n                        :on-success=\"handleAvatarSuccess\" :before-upload=\"beforeAvatarUpload\">\r\n                        <img v-if=\"imageUrl\" :src=\"imageUrl\" />\r\n                        <el-icon v-else class=\"avatar-uploader-icon\">\r\n                            <Plus />   \r\n                        </el-icon>\r\n                    </el-upload> -->\r\n                </el-form-item>\r\n            </el-form>\r\n            <el-button type=\"primary\" @click=\"AddQuestion\" size=\"large\"> 确定 </el-button>\r\n            <el-button type=\"info\" @click=\"resetForm\" size=\"large\">取消</el-button>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive } from 'vue'\r\nimport { AddOneQuestion } from '@/axios/apis.js'\r\nimport { ElMessage } from \"element-plus\";\r\n\r\n\r\n\r\nconst QuestionDetail = ref({})\r\nconst QuestionDetailRef = ref()\r\n\r\nconst QuestionDetailRules = reactive({\r\n    title: [\r\n        { required: true, message: \"请输入题目\", trigger: \"blur\" },\r\n    ],\r\n    description: [\r\n        { required: true, message: \"请输入描述\", trigger: \"blur\" },\r\n    ],\r\n    degree: [\r\n        { required: true, message: \"请输入难度\", trigger: \"blur\" },\r\n    ],\r\n});\r\nconst labelPosition = ref('left')\r\nconst size = ref('large')\r\n\r\n//取消按钮\r\nconst resetForm = () => {\r\n    QuestionDetailRef.value.resetFields()\r\n}\r\n\r\n//确定按钮\r\nconst AddQuestion = async () => {\r\n    const res = await AddOneQuestion(QuestionDetail.value)\r\n    ElMessage({\r\n        type: \"success\",\r\n        message: res.message,\r\n    });\r\n    QuestionDetailRef.value.resetFields()\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style  lang=\"less\" scoped>\r\n.addQues {\r\n\r\n    ::v-deep .el-textarea__inner {\r\n\r\n        font-size: 20px;\r\n    }\r\n\r\n    ::v-deep .el-form-item__label {\r\n        font-size: 20px;\r\n    }\r\n\r\n    ::v-deep .el-input__inner {\r\n        height: 50px;\r\n        font-size: 18px;\r\n    }\r\n\r\n    ::v-deep .el-form-item {\r\n        font-style: 20px;\r\n    }\r\n}\r\n\r\n.header-title {\r\n    font-size: 18px;\r\n    margin-bottom: 20px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}