{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card-header\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"span\", null, \"封禁\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", null, \"启用\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_breadcrumb_item = _resolveComponent(\"el-breadcrumb-item\");\n  const _component_el_breadcrumb = _resolveComponent(\"el-breadcrumb\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_switch = _resolveComponent(\"el-switch\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_pagination = _resolveComponent(\"el-pagination\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" 面包屑导航区域 \"), _createVNode(_component_el_breadcrumb, {\n    separator: \">\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_breadcrumb_item, {\n      to: {\n        path: '/home'\n      }\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"首页\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_breadcrumb_item, null, {\n      default: _withCtx(() => [_createTextVNode(\"用户管理\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_breadcrumb_item, null, {\n      default: _withCtx(() => [_createTextVNode(\"用户列表\")]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 卡片视图区域 \"), _createVNode(_component_el_card, {\n    class: \"box-card\"\n  }, {\n    header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_el_row, {\n      gutter: 25\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_col, {\n        span: 9\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          placeholder: \"请输入内容\",\n          modelValue: $setup.queryInfo.query,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.queryInfo.query = $event),\n          clearable: \"\",\n          onClear: $setup.getUserListView\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_col, {\n        span: 3\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: $setup.getUserListView\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"查询\")]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })])]),\n\n    default: _withCtx(() => [_createVNode(_component_el_table, {\n      data: $setup.usersData,\n      border: \"\",\n      style: {\n        \"width\": \"100%\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        type: \"index\",\n        label: \"id\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"username\",\n        label: \"用户名\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"mobile\",\n        label: \"电话\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"role\",\n        label: \"角色\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"email\",\n        label: \"邮箱\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"createdTime\",\n        label: \"创建时间\"\n      }, {\n        default: _withCtx(scope => [_createTextVNode(_toDisplayString($setup.userTimeFormate(scope.row.createdTime)), 1 /* TEXT */)]),\n\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_table_column, {\n        label: \"状态\",\n        prop: \"state\"\n      }, {\n        default: _withCtx(scope => [_hoisted_2, _createVNode(_component_el_switch, {\n          modelValue: scope.state,\n          \"onUpdate:modelValue\": $event => scope.state = $event,\n          onChange: $event => $setup.userStateChanged(scope.row)\n        }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"onChange\"]), _hoisted_3]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_table_column, {\n        label: \"操作\"\n      }, {\n        default: _withCtx(scope => [_createCommentVNode(\" 修改按钮 \"), _createVNode(_component_el_button, {\n          type: \"primary\",\n          class: \"iconfont icon-zuoti\",\n          circle: \"\",\n          onClick: $event => $setup.showEditDialog(scope.row.id),\n          size: \"large\"\n        }, null, 8 /* PROPS */, [\"onClick\"]), _createCommentVNode(\" 删除按钮 \"), _createVNode(_component_el_button, {\n          type: \"danger\",\n          class: \"iconfont icon-shanchu2\",\n          circle: \"\",\n          onClick: $event => $setup.removeUserById(scope.row.id),\n          size: \"large\"\n        }, null, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\"]), _createVNode(_component_el_pagination, {\n      \"current-page\": $setup.queryInfo.page,\n      \"onUpdate:current-page\": _cache[1] || (_cache[1] = $event => $setup.queryInfo.page = $event),\n      \"page-sizes\": [3, 5, 10],\n      layout: \"total, sizes, prev, pager, next, jumper\",\n      total: $setup.total,\n      onCurrentChange: $setup.handleCurrentChange\n    }, null, 8 /* PROPS */, [\"current-page\", \"total\"])]),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 修改用户的对话框 \"), _createVNode(_component_el_dialog, {\n    title: \"修改用户\",\n    modelValue: $setup.editDialogVisible,\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.editDialogVisible = $event),\n    width: \"40%\"\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"span\", _hoisted_4, [_createVNode(_component_el_button, {\n      onClick: _cache[5] || (_cache[5] = $event => $setup.editDialogVisible = false)\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"取消\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $setup.editUserInfo\n    }, {\n      default: _withCtx(() => [_createTextVNode(\" 确定 \")]),\n      _: 1 /* STABLE */\n    })])]),\n\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      ref: \"editFromRef\",\n      \"label-position\": $setup.labelPosition,\n      \"label-width\": \"100px\",\n      model: $setup.editForm,\n      rules: $setup.editFormRules,\n      style: {\n        \"max-width\": \"460px\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"用户名\",\n        prop: \"username\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.editForm.username,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.editForm.username = $event),\n          disabled: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"电话\",\n        prop: \"mobile\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.editForm.mobile,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.editForm.mobile = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"邮箱\",\n        prop: \"email\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.editForm.email,\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.editForm.email = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"label-position\", \"model\", \"rules\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","_createElementBlock","_createCommentVNode","_createVNode","_component_el_breadcrumb","separator","_component_el_breadcrumb_item","to","path","_component_el_card","header","_hoisted_1","_component_el_row","gutter","_component_el_col","span","_component_el_input","placeholder","$setup","query","clearable","onClear","_component_el_button","type","onClick","_component_el_table","data","border","style","_component_el_table_column","label","prop","scope","row","createdTime","_hoisted_2","_component_el_switch","state","onChange","_hoisted_3","circle","id","size","_component_el_pagination","page","layout","total","onCurrentChange","_component_el_dialog","title","width","footer","_hoisted_4","_component_el_form","ref","model","rules","_component_el_form_item","username","disabled","mobile","email"],"sourceRoot":"","sources":["D:\\前端基础\\22科技月评-算法在线刷题平台\\algorithmic_platform\\src\\components\\userList\\index.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <!-- 面包屑导航区域 -->\r\n        <el-breadcrumb separator=\">\">\r\n            <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n            <el-breadcrumb-item>用户管理</el-breadcrumb-item>\r\n            <el-breadcrumb-item>用户列表</el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n\r\n        <!-- 卡片视图区域 -->\r\n        <el-card class=\"box-card\">\r\n            <!-- 搜索区域 -->\r\n            <template #header>\r\n                <div class=\"card-header\">\r\n                    <el-row :gutter=\"25\">\r\n                        <el-col :span=\"9\">\r\n                            <el-input placeholder=\"请输入内容\" v-model=\"queryInfo.query\" clearable @clear=\"getUserListView\">\r\n                            </el-input>\r\n                        </el-col>\r\n                        <el-col :span=\"3\">\r\n                            <el-button type=\"primary\" @click=\"getUserListView\">查询</el-button>\r\n                        </el-col>\r\n                    </el-row>\r\n                </div>\r\n            </template>\r\n\r\n            <!-- 用户列表区域 -->\r\n            <el-table :data=\"usersData\" border style=\"width: 100%\">\r\n                <el-table-column type=\"index\" label=\"id\" />\r\n                <el-table-column prop=\"username\" label=\"用户名\" />\r\n                <el-table-column prop=\"mobile\" label=\"电话\" />\r\n                <el-table-column prop=\"role\" label=\"角色\" />\r\n                <el-table-column prop=\"email\" label=\"邮箱\" />\r\n                <el-table-column prop=\"createdTime\" label=\"创建时间\">\r\n                    <template v-slot=\"scope\">\r\n                        {{ userTimeFormate(scope.row.createdTime) }}\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"状态\" prop=\"state\">\r\n                    <!-- 用插槽包裹el-switch开关 -->\r\n                    <template v-slot=\"scope\">\r\n                        <span>封禁</span>\r\n                        <el-switch v-model=\"scope.state\" @change=\"userStateChanged(scope.row)\" />\r\n                        <span>启用</span>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"操作\">\r\n                    <template v-slot=\"scope\">\r\n                        <!-- 修改按钮 -->\r\n                        <el-button type=\"primary\" class=\"iconfont icon-zuoti\" circle\r\n                            @click=\"showEditDialog(scope.row.id)\" size=\"large\">\r\n                        </el-button>\r\n                        <!-- 删除按钮 -->\r\n                        <el-button type=\"danger\" class=\"iconfont icon-shanchu2\" circle\r\n                            @click=\"removeUserById(scope.row.id)\" size=\"large\">\r\n                        </el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n            <!-- 分页区域 -->\r\n            <el-pagination v-model:current-page=\"queryInfo.page\" :page-sizes=\"[3, 5, 10]\"\r\n                layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\" @current-change=\"handleCurrentChange\" />\r\n        </el-card>\r\n\r\n        <!-- 修改用户的对话框 -->\r\n        <el-dialog title=\"修改用户\" v-model=\"editDialogVisible\" width=\"40%\">\r\n            <el-form ref=\"editFromRef\" :label-position=\"labelPosition\" label-width=\"100px\" :model=\"editForm\"\r\n                :rules=\"editFormRules\" style=\"max-width: 460px\">\r\n                <el-form-item label=\"用户名\" prop=\"username\">\r\n                    <el-input v-model=\"editForm.username\" disabled />\r\n                </el-form-item>\r\n                <el-form-item label=\"电话\" prop=\"mobile\">\r\n                    <el-input v-model=\"editForm.mobile\" />\r\n                </el-form-item>\r\n                <el-form-item label=\"邮箱\" prop=\"email\">\r\n                    <el-input v-model=\"editForm.email\" />\r\n                </el-form-item>\r\n            </el-form>\r\n            <template #footer>\r\n                <span class=\"dialog-footer\">\r\n                    <el-button @click=\"editDialogVisible = false\">取消</el-button>\r\n                    <el-button type=\"primary\" @click=\"editUserInfo\"> 确定 </el-button>\r\n                </span>\r\n            </template>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, reactive, ref } from \"vue\";\r\nimport {\r\n    getUserList,\r\n    changeUserState,\r\n    getEditUsers,\r\n    // putEditUsers,\r\n    deleteOneUser,\r\n} from \"@/axios/apis\";\r\nimport instance from \"@/axios/index\";\r\nimport { ElMessage, ElMessageBox } from \"element-plus\";\r\nconst queryInfo = reactive({\r\n    page: 1,\r\n});\r\n\r\nconst usersData = ref([]);\r\nconst total = ref(0);\r\n//查询到的用户信息对象\r\nconst editForm = ref({});\r\nconst labelPosition = ref(\"left\");\r\nconst editFromRef = ref();\r\n//修改用户对话框的显示与隐藏\r\nconst editDialogVisible = ref(false);\r\n\r\n//验证邮箱的规则\r\nvar checkEmail = (rule, value, cb) => {\r\n    //验证邮箱的正则表达式\r\n    const regEmail = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\\.[a-zA-Z0-9_-])+/;\r\n    if (regEmail.test(value)) {\r\n        return cb();\r\n    }\r\n    cb(new Error(\"请输入合法的邮箱!\"));\r\n};\r\n\r\n//验证电话的规则\r\nvar checkMobile = (rule, value, cb) => {\r\n    //验证电话的正则表达式\r\n    let regMobile =\r\n        /^(0|86|17951)?(13[0-9]|15[012356789]|17[678]|18[0-9]|14[57])[0-9]{8}$/;\r\n    if (regMobile.test(value)) {\r\n        cb();\r\n    } else {\r\n        cb(new Error(\"手机号码格式不正确\"));\r\n    }\r\n};\r\n\r\n//修改表单的验证规则对象\r\nconst editFormRules = reactive({\r\n    email: [\r\n        { required: true, message: \"请输入邮箱号\", trigger: \"blur\" },\r\n        { validator: checkEmail, trigger: \"blur\" },\r\n    ],\r\n    mobile: [\r\n        { required: true, message: \"请输入手机号\", trigger: \"blur\" },\r\n        { validator: checkMobile, trigger: \"blur\" },\r\n    ],\r\n});\r\n\r\nonMounted(() => {\r\n    getUserListView();\r\n});\r\n\r\nconst getUserListView = async () => {\r\n    const res = await getUserList(queryInfo);\r\n    console.log(res);\r\n    if (res.status !== 200) {\r\n        return ElMessage.error(\"获取用户列表失败\");\r\n    }\r\n    usersData.value = res.data;\r\n    total.value = res.total;\r\n};\r\n\r\n//格式化时间\r\nconst userTimeFormate = (totalTime) => {\r\n\r\n    const date = new Date(totalTime)\r\n    const yyyy = date.getFullYear()\r\n    const MM = date.getMonth + 1 < 10 ? '0' + date.getMonth + 1 : date.getMonth + 1\r\n\r\n\r\n    return yyyy + '-' + MM + '-'\r\n\r\n\r\n}\r\n\r\n// 监听 pagesize 改变的事件\r\nconst handleSizeChange = (newSize) => {\r\n    queryInfo.pagesize = newSize;\r\n    getUserListView();\r\n};\r\n\r\n// 监听页码值 改变的事件\r\nconst handleCurrentChange = (newPage) => {\r\n    queryInfo.pagenum = newPage;\r\n    getUserListView();\r\n};\r\n// 监听 switch 开头状态的改变\r\nconst userStateChanged = async (userInfo) => {\r\n    const res = await changeUserState(userInfo);\r\n    // console.log(res);\r\n    if (res.meta.status !== 200) {\r\n        userInfo.mg_state = !userInfo.mg_state;\r\n        return ElMessage.error(\"更新用户状态失败\");\r\n    }\r\n    ElMessage({\r\n        message: \"更新用户状态成功\",\r\n        type: \"success\",\r\n    });\r\n};\r\n\r\n//修改按钮\r\nconst showEditDialog = async (id) => {\r\n    //展示编辑用户的对话框\r\n    const res = await getEditUsers(id);\r\n    if (res.meta.status !== 200) {\r\n        return ElMessage.error(\"查询用户信息失败\");\r\n    }\r\n    editForm.value = res.data;\r\n    editDialogVisible.value = true;\r\n};\r\n\r\n//监听修改用户对话框的关闭事件\r\n// const editDialogClose = () => {\r\n//     editFromRef.value.resetFields();\r\n// }\r\n\r\n//点击按钮，提交修改的信息\r\nconst editUserInfo = () => {\r\n    editFromRef.value.validate(async (valid) => {\r\n        if (!valid) return;\r\n        // console.log(editForm.value.id); //500\r\n        // console.log(editForm.value);\r\n        // **********不太理解的地方\r\n        // const res = await putEditUsers(editForm)\r\n        const res = await instance.put(\"users/\" + editForm.value.id, {\r\n            email: editForm.value.email,\r\n            mobile: editForm.value.mobile,\r\n        });\r\n        // console.log(res);\r\n        if (res.meta.status !== 200) {\r\n            return ElMessage.error(\"修改用户信息失败\");\r\n        }\r\n        editDialogVisible.value = false;\r\n        //重新获取用户列表\r\n        getUserListView();\r\n        ElMessage({\r\n            message: \"修改用户成功!\",\r\n            type: \"success\",\r\n        });\r\n    });\r\n};\r\n\r\n//删除按钮,根据id 删除对应用户信息\r\nconst removeUserById = async (id) => {\r\n    //弹框询问用户是否删除数据\r\n    const confirmRes = await ElMessageBox.confirm(\"此操作将永久删除该用户, 是否继续?\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n    }).catch((err) => err)\r\n\r\n    //如果用户 确认 删除,则返回值为 字符串 confirm\r\n    //如果用户 取消了删除,则返回值为 字符串 cancel\r\n    // console.log(confirmRes);\r\n    if (confirmRes !== \"confirm\") {\r\n        return ElMessage.error(\"已取消删除\");\r\n    }\r\n    const res = await deleteOneUser(id)\r\n    // console.log(res);\r\n    if (res.meta.status !== 200) {\r\n        return ElMessage.error(\"删除用户失败\");\r\n    }\r\n    ElMessage({\r\n        type: \"success\",\r\n        message: \"删除用户成功\",\r\n    });\r\n    getUserListView();\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}